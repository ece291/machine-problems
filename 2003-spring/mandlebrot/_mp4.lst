     1                                  ; ECE 291 Spring 2003 MP4    
     2                                  ; Mandlebrot Fractals
     3                                  ;
     4                                  ; Completed By:
     5                                  ;  Your Name
     6                                  ;  Date
     7                                  ;
     8                                  ; Zbigniew Kalbarczyk
     9                                  ; Guest Authors - Michael Urman, Ajay Ladsaria
    10                                  ; University of Illinois Urbana Champaign
    11                                  ; Dept. of Electrical & Computer Engineering
    12                                  ;
    13                                  ; Ver 1.0
    14                                  
    15                                  %include "lib291.inc"
    16                              <1> ; Main pmodelib include
    17                              <1> ;  By Peter Johnson, 1999-2000
    18                              <1> ;
    19                              <1> ; $Id: lib291.inc,v 1.9 2001/04/03 04:39:34 mu Exp $
    20                              <1> 
    21                              <1> %include "myC32.mac"
    22                              <2> ; NASM macro set to make interfacing to 32-bit programs easier
    23                              <2> ; Also cool little macros to make NASM emulate some MASM things.
    24                              <2> ;
    25                              <2> ; Originally included in NASM.  Modifications by Peter Johnson, 1999.
    26                              <2> ;
    27                              <2> ; $Id: myC32.mac,v 1.6 2002/03/31 08:18:22 mu Exp $
    28                              <2> 
    29                              <2> %imacro proc 1                  ; begin a procedure definition
    30                              <2> %ifctx proc
    31                              <2> %error Mismatched `endproc'/`proc'
    32                              <2> %else
    33                              <2> %push proc
    34                              <2>           global %1
    35                              <2> %1:       push  ebp
    36                              <2>           mov   ebp, esp
    37                              <2> %assign %$arg 8
    38                              <2> %assign %$local 0
    39                              <2> ;%assign %$argnum 0
    40                              <2> %define %$procname %1
    41                              <2> %endif
    42                              <2> %endmacro
    43                              <2> 
    44                              <2> %imacro arg 0-1 4               ; used with the argument name as a label
    45                              <2> %00       equ %$arg
    46                              <2> ;%assign %$argnum %$argnum+1
    47                              <2> ;.arg%$argnum   equ     %1
    48                              <2> %assign %$arg %1+%$arg
    49                              <2> %endmacro
    50                              <2> 
    51                              <2> %imacro local 0-1 4		; like arg, but declare c local variables
    52                              <2> %if %$local == 0
    53                              <2>           add   esp, .STACK_FRAME_SIZE
    54                              <2> %endif
    55                              <2> %assign %$local %$local-%1
    56                              <2> %00       equ %$local
    57                              <2> %endmacro
    58                              <2> 
    59                              <2> %imacro endproc 0
    60                              <2> %ifnctx proc
    61                              <2> %error Mismatched `endproc'/`proc'
    62                              <2> %else
    63                              <2> .STACK_FRAME_SIZE	equ	%$local	; stack size known by end
    64                              <2> ;        mov     esp, ebp
    65                              <2> ;        pop     ebp
    66                              <2> %ifdef LEGACY_ENDPROC
    67                              <2>         ret
    68                              <2> %endif
    69                              <2> ;__end_%$procname:               ; useful for calculating function size
    70                              <2> ;          global %{$procname}_arglen
    71                              <2> ;%{$procname}_arglen    equ     %$arg-8
    72                              <2> ;%assign %$i 1
    73                              <2> ;%rep %$argnum
    74                              <2> ;          global %{$procname}_arg%$i
    75                              <2> ;%{$procname}_arg%$i    equ     %{$procname}.arg%$i
    76                              <2> ;%assign %$i %$i+1
    77                              <2> ;%endrep
    78                              <2> %pop
    79                              <2> %endif
    80                              <2> %endmacro
    81                              <2> 
    82                              <2> ; redefine ret instructions for in-proc cases
    83                              <2> %imacro ret 0-1
    84                              <2> %ifnctx proc
    85                              <2> 	ret	%1
    86                              <2> %else
    87                              <2> 	mov	esp, ebp
    88                              <2> 	pop	ebp
    89                              <2> 	ret	%1
    90                              <2> %endif
    91                              <2> %endmacro
    92                              <2> 
    93                              <2> %imacro retf 0-1
    94                              <2> %ifnctx proc
    95                              <2> 	retf	%1
    96                              <2> %else
    97                              <2> 	mov	esp, ebp
    98                              <2> 	pop	ebp
    99                              <2> 	retf	%1
   100                              <2> %endif
   101                              <2> %endmacro
   102                              <2> 
   103                              <2> %imacro retn 0-1
   104                              <2> %ifnctx proc
   105                              <2> 	retn	%1
   106                              <2> %else
   107                              <2> 	mov	esp, ebp
   108                              <2> 	pop	ebp
   109                              <2> 	retn	%1
   110                              <2> %endif
   111                              <2> %endmacro
   112                              <2> 
   113                              <2> ; invoke calls a C function
   114                              <2> ; defaults to word (16 bit) size parameters
   115                              <2> %macro invoke 1-*
   116                              <2> %rotate -1
   117                              <2> ;%define invoketype word
   118                              <2> %rep (%0-1)
   119                              <2> ;       %ifidni %1,dword
   120                              <2> ;               %define invoketype dword
   121                              <2> ;       %elifidni %1,word
   122                              <2> ;               %define invoketype word
   123                              <2> ;       %elifidni %1,byte
   124                              <2> ;               %define invoketype byte
   125                              <2> ;       %else
   126                              <2>         %ifidni %1, cs
   127                              <2>                 o16 push %1
   128                              <2>         %elifidni %1, ds
   129                              <2>                 o16 push %1
   130                              <2>         %elifidni %1, es
   131                              <2>                 o16 push %1
   132                              <2>         %elifidni %1, fs
   133                              <2>                 o16 push %1
   134                              <2>         %elifidni %1, gs
   135                              <2>                 o16 push %1
   136                              <2>         %elifidni %1, word cs
   137                              <2>                 o16 push %1
   138                              <2>         %elifidni %1, word ds
   139                              <2>                 o16 push %1
   140                              <2>         %elifidni %1, word es
   141                              <2>                 o16 push %1
   142                              <2>         %elifidni %1, word fs
   143                              <2>                 o16 push %1
   144                              <2>         %elifidni %1, word gs
   145                              <2>                 o16 push %1
   146                              <2>         %else
   147                              <2>                 push %1
   148                              <2>         %endif
   149                              <2> ;       %endif
   150                              <2>         %rotate -1
   151                              <2> %endrep
   152                              <2> call %1
   153                              <2> %if (%0!=1)
   154                              <2>         add esp, byte %{1}_arglen
   155                              <2> %endif
   156                              <2> %endmacro
   157                              <2> 
   158                              <1> 
   159                              <1> %include "constant.inc"
   160                              <2> ; General constants
   161                              <2> ;  By Peter Johnson, 2001
   162                              <2> ;
   163                              <2> ; $Id: constant.inc,v 1.7 2001/12/14 19:31:20 pete Exp $
   164                              <2> 
   165                              <2> ; Socket constants:
   166                              <2> ;  Addresses:
   167                              <2> INADDR_ANY		equ	0
   168                              <2> INADDR_LOOPBACK		equ	7F000001h
   169                              <2> INADDR_BROADCAST	equ	0FFFFFFFFh
   170                              <2> INADDR_NONE		equ	0FFFFFFFFh
   171                              <2> ;  Types:
   172                              <2> SOCK_STREAM		equ	1
   173                              <2> SOCK_DGRAM		equ	2
   174                              <2> ;  Events:
   175                              <2> SOCKEVENT_READ		equ	01h
   176                              <2> SOCKEVENT_WRITE		equ	02h
   177                              <2> SOCKEVENT_OOB		equ	04h
   178                              <2> SOCKEVENT_ACCEPT	equ	08h
   179                              <2> SOCKEVENT_CONNECT	equ	10h
   180                              <2> SOCKEVENT_CLOSE		equ	20h
   181                              <2> ;  Protocols:
   182                              <2> IPPROTO_IP		equ	0
   183                              <2> IPPROTO_ICMP		equ	1
   184                              <2> IPPROTO_TCP		equ	6
   185                              <2> IPPROTO_UDP		equ	17
   186                              <2> SOL_SOCKET		equ	0FFFFh
   187                              <2> ;  Options
   188                              <2> SOCKOPT_DEBUG		equ	0001h
   189                              <2> SOCKOPT_ACCEPTCONN	equ	0002h
   190                              <2> SOCKOPT_REUSEADDR	equ	0004h
   191                              <2> SOCKOPT_KEEPALIVE	equ	0008h
   192                              <2> SOCKOPT_DONTROUTE	equ	0010h
   193                              <2> SOCKOPT_BROADCAST	equ	0020h
   194                              <2> SOCKOPT_USELOOPBACK	equ	0040h
   195                              <2> SOCKOPT_LINGER		equ	0080h
   196                              <2> SOCKOPT_DONTLINGER	equ	~0080h
   197                              <2> SOCKOPT_OOBINLINE	equ	0100h
   198                              <2> SOCKOPT_SNDBUF		equ	1001h
   199                              <2> SOCKOPT_RCVBUF		equ	1002h
   200                              <2> SOCKOPT_SNDLOWAT	equ	1003h
   201                              <2> SOCKOPT_RCVLOWAT	equ	1004h
   202                              <2> SOCKOPT_SNDTIMEOUT	equ	1005h
   203                              <2> SOCKOPT_RCVTIMEOUT	equ	1006h
   204                              <2> SOCKOPT_ERROR		equ	1007h
   205                              <2> SOCKOPT_TYPE		equ	1008h
   206                              <2> TCP_NODELAY		equ	0001h
   207                              <2> 
   208                              <2> ; Socket structures
   209                              <2> 	STRUC	SOCKADDR
   210 00000000 <res 00000002>      <2> .Port		resw	1	; Port number
   211 00000002 <res 00000004>      <2> .Address	resd	1	; Network address
   212                              <2> 	ENDSTRUC
   213                              <2> 
   214                              <2> 	STRUC	HOSTENT
   215 00000000 <res 00000004>      <2> .Name		resd	1	; Pointer to official name of host
   216 00000004 <res 00000004>      <2> .Aliases	resd	1	; Pointer to 0-terminated array of pointers to
   217                              <2> 				;  alias names
   218 00000008 <res 00000004>      <2> .AddrList	resd	1	; Pointer to 0-terminated array of pointers to
   219                              <2> 				;  addresses
   220                              <2> 	ENDSTRUC
   221                              <2> 
   222                              <1> %include "globals.inc"
   223                              <2> ; General constants and stuff
   224                              <2> ;  By Peter Johnson, 1999-2001
   225                              <2> ;
   226                              <2> ; $Id: globals.inc,v 1.4 2001/03/19 01:10:36 pete Exp $
   227                              <2> 
   228                              <2>         EXTERN _ScratchBlock    ; Scratch Block (1 meg)
   229                              <2>         EXTERN _textsel         ; Selector to the textmode ram
   230                              <2> 
   231                              <2> NET_BUFFER_SIZE equ     16*1024         ; Network send/receive buffer size
   232                              <2>                                         ; (per buffer)
   233                              <2>         
   234                              <2> RXBuffer        equ     0               ; Receive Data Buffer (offset into NetTransferSel)
   235                              <2> TXBuffer        equ     NET_BUFFER_SIZE ; Transmit Data Buffer (offset into NetTransferSel)
   236                              <2> 
   237                              <1> %include "dma.inc"
   238                              <2> ; DMA interface code (used primarily by sound routines)
   239                              <2> ;  By Peter Johnson, 1999
   240                              <2> ;
   241                              <2> ; $Id: dma.inc,v 1.2 2000/12/14 07:52:21 pete Exp $
   242                              <2> 
   243                              <2>         EXTERN  _DMA_Allocate_Mem
   244                              <2>         EXTERN  _DMA_Start
   245                              <2>         EXTERN  _DMA_Stop
   246                              <2>         EXTERN  _DMA_Todo
   247                              <2>         EXTERN  _DMA_Lock_Mem
   248                              <2> 
   249                              <2> _DMA_Allocate_Mem_arglen        equ     12
   250                              <2> _DMA_Start_arglen               equ     20
   251                              <2> _DMA_Stop_arglen                equ     4
   252                              <2> _DMA_Todo_arglen                equ     4
   253                              <2> 
   254                              <1> %include "dpmi_int.inc"
   255                              <2> ; DPMI Interrupt Interface header file
   256                              <2> ;  By Peter Johnson, 1999
   257                              <2> ;
   258                              <2> ; $Id: dpmi_int.inc,v 1.3 2000/12/14 07:52:21 pete Exp $
   259                              <2> 
   260                              <2> 	EXTERN DPMI_Int
   261                              <2> 	EXTERN _AllocTransferBuf
   262                              <2> 	EXTERN _FreeTransferBuf
   263                              <2> 
   264                              <2> 	EXTERN	DPMI_Regs
   265                              <2> 	EXTERN	DPMI_EDI
   266                              <2> 	EXTERN	DPMI_ESI
   267                              <2> 	EXTERN	DPMI_EBP
   268                              <2> 	EXTERN	DPMI_EBX
   269                              <2> 	EXTERN	DPMI_EDX
   270                              <2> 	EXTERN	DPMI_ECX
   271                              <2> 	EXTERN	DPMI_EAX
   272                              <2> 	EXTERN	DPMI_FLAGS
   273                              <2> 	EXTERN	DPMI_ES
   274                              <2> 	EXTERN	DPMI_DS
   275                              <2> 	EXTERN	DPMI_FS
   276                              <2> 	EXTERN	DPMI_GS
   277                              <2> 	EXTERN	DPMI_SP
   278                              <2> 	EXTERN	DPMI_SS
   279                              <2> 
   280                              <2> 	EXTERN	_Transfer_Buf
   281                              <2> 	EXTERN	_Transfer_Buf_Seg
   282                              <2> 	EXTERN	_Transfer_Buf_Size
   283                              <2> 
   284                              <2> DPMI_EDI_off    equ     00h
   285                              <2> DPMI_ESI_off    equ     04h
   286                              <2> DPMI_EBP_off    equ     08h
   287                              <2> ;DPMI_RES0_off  equ     0Ch
   288                              <2> DPMI_EBX_off    equ     10h
   289                              <2> DPMI_EDX_off    equ     14h
   290                              <2> DPMI_ECX_off    equ     18h
   291                              <2> DPMI_EAX_off    equ     1Ch
   292                              <2> DPMI_FLAGS_off  equ     20h
   293                              <2> DPMI_ES_off     equ     22h
   294                              <2> DPMI_DS_off     equ     24h
   295                              <2> DPMI_FS_off     equ     26h
   296                              <2> DPMI_GS_off     equ     28h
   297                              <2> DPMI_IP_off     equ     2Ah
   298                              <2> DPMI_CS_off     equ     2Ch
   299                              <2> DPMI_SP_off     equ     2Eh
   300                              <2> DPMI_SS_off     equ     30h
   301                              <1> %include "dpmi_mem.inc"
   302                              <2> ; DPMI Memory Interface header file
   303                              <2> ;  By Peter Johnson, 1999-2001
   304                              <2> ;
   305                              <2> ; $Id: dpmi_mem.inc,v 1.6 2001/03/16 23:52:18 pete Exp $
   306                              <2> 
   307                              <2> 	EXTERN _AllocMem
   308                              <2> 	EXTERN _AllocSelector
   309                              <2> 	EXTERN _FreeSelector
   310                              <2>         EXTERN _GetPhysicalMapping
   311                              <2>         EXTERN _FreePhysicalMapping
   312                              <2>         EXTERN _LockArea
   313                              <2> 
   314                              <2> _AllocMem_arglen		equ	4
   315                              <2> _AllocSelector_arglen		equ	4
   316                              <2> _FreeSelector_arglen		equ	2
   317                              <2> _GetPhysicalMapping_arglen      equ     16
   318                              <2> _FreePhysicalMapping_arglen     equ     8
   319                              <2> _LockArea_arglen                equ     10
   320                              <1> %include "filefunc.inc"
   321                              <2> ; File handling functions header file
   322                              <2> ;  By Peter Johnson, 1999-2001
   323                              <2> ;
   324                              <2> ; $Id: filefunc.inc,v 1.5 2001/03/16 22:58:36 pete Exp $
   325                              <2> 
   326                              <2> 	EXTERN _OpenFile
   327                              <2> 	EXTERN _CloseFile
   328                              <2> 	EXTERN _ReadFile
   329                              <2> 	EXTERN _ReadFile_Sel
   330                              <2> 	EXTERN _WriteFile
   331                              <2> 	EXTERN _WriteFile_Sel
   332                              <2> 	EXTERN _SeekFile
   333                              <2> 
   334                              <2> _OpenFile_arglen	equ	6
   335                              <2> _CloseFile_arglen	equ	4
   336                              <2> _ReadFile_arglen	equ	12
   337                              <2> _ReadFile_Sel_arglen	equ	14
   338                              <2> _WriteFile_arglen	equ	12
   339                              <2> _WriteFile_Sel_arglen	equ	14
   340                              <2> _SeekFile_arglen	equ	10
   341                              <1> %include "gfxfiles.inc"
   342                              <2> ; File loading functions header file
   343                              <2> ;  By Peter Johnson, 1999-2001
   344                              <2> ;
   345                              <2> ; $Id: gfxfiles.inc,v 1.6 2001/10/17 21:02:27 pete Exp $
   346                              <2> 
   347                              <2> 	EXTERN _LoadPNG
   348                              <2> 	EXTERN _LoadPNG_Sel
   349                              <2> 	EXTERN _LoadJPG
   350                              <2> 	EXTERN _LoadBMP
   351                              <2> 	EXTERN _LoadBMP_Sel
   352                              <2>         EXTERN _SaveBMP
   353                              <2>         EXTERN _SaveBMP_Sel
   354                              <2> 	
   355                              <2> _LoadPNG_arglen 	equ     16
   356                              <2> _LoadPNG_Sel_arglen 	equ     18
   357                              <2> _LoadJPG_arglen 	equ     16
   358                              <2> _LoadBMP_arglen		equ	8
   359                              <2> _LoadBMP_Sel_arglen	equ	10
   360                              <2> _SaveBMP_arglen 	equ     16
   361                              <2> _SaveBMP_Sel_arglen 	equ     18
   362                              <1> %include "int_wrap.inc"
   363                              <2> ; IRQ Wrappers and handling functions header file
   364                              <2> ;  By Peter Johnson, 1999
   365                              <2> ;
   366                              <2> ; $Id: int_wrap.inc,v 1.2 2000/12/14 07:52:21 pete Exp $
   367                              <2> 
   368                              <2>         EXTERN  _Install_Int
   369                              <2>         EXTERN  _Remove_Int
   370                              <2>         EXTERN  _Exit_IRQ
   371                              <2>         EXTERN  _Init_IRQ
   372                              <2>         EXTERN  _Restore_IRQ
   373                              <2>         EXTERN  _Enable_IRQ
   374                              <2>         EXTERN  _Disable_IRQ
   375                              <2> 
   376                              <2> _Install_Int_arglen             equ     8
   377                              <2> _Remove_Int_arglen              equ     4
   378                              <2> _Restore_IRQ_arglen             equ     4
   379                              <2> _Enable_IRQ_arglen              equ     4
   380                              <2> _Disable_IRQ_arglen             equ     4
   381                              <1> %include "lib_load.inc"
   382                              <2> ; Library Init/Deinit Header File
   383                              <2> ;  By Peter Johnson, 2000
   384                              <2> ;
   385                              <2> ; $Id: lib_load.inc,v 1.2 2000/12/14 07:52:21 pete Exp $
   386                              <2> 
   387                              <2> 	EXTERN _LibInit
   388                              <2>         EXTERN _LibExit
   389                              <2>  
   390                              <1> %include "misc.inc"
   391                              <2> ; Miscellaneous functions header file
   392                              <2> ;  By Peter Johnson, 2000
   393                              <2> ;
   394                              <2> ; $Id: misc.inc,v 1.3 2000/12/14 07:52:21 pete Exp $
   395                              <2> 
   396                              <2>         EXTERN BinAsc
   397                              <2> 	EXTERN AscBin
   398                              <2> 
   399                              <1> %include "netbios.inc"
   400                              <2> ; Include file for NetBIOS
   401                              <2> ;  Written by Peter Johnson, 2000
   402                              <2> ;
   403                              <2> ; $Id: netbios.inc,v 1.2 2000/12/14 07:52:21 pete Exp $
   404                              <2> 
   405                              <2>         EXTERN _NetInit
   406                              <2>         EXTERN _SendPacket
   407                              <2>         EXTERN _NetRelease
   408                              <2> 
   409                              <2>         EXTERN _NetTransferSel
   410                              <2> 
   411                              <2> _NetInit_arglen                 equ     12
   412                              <2> _SendPacket_arglen              equ     4
   413                              <2> 
   414                              <2> 
   415                              <1> %include "rmcbwrap.inc"
   416                              <2> ; IRQ Wrappers and handling functions header file
   417                              <2> ;  By Peter Johnson, 1999
   418                              <2> ;
   419                              <2> ; $Id: rmcbwrap.inc,v 1.2 2000/12/14 07:52:21 pete Exp $
   420                              <2> 
   421                              <2>         EXTERN  _Get_RMCB
   422                              <2>         EXTERN  _Free_RMCB
   423                              <2> 
   424                              <2> _Get_RMCB_arglen                equ     16
   425                              <2> _Free_RMCB_arglen               equ     4
   426                              <1> %include "sb16.inc"
   427                              <2> ; SB16 interface code
   428                              <2> ;  By Michael Urman, 2001
   429                              <2> ;
   430                              <2> ; $Id: sb16.inc,v 1.2 2001/04/07 20:52:00 mu Exp $
   431                              <2> 
   432                              <2> 	EXTERN	_SB16_Init
   433                              <2> 	EXTERN	_SB16_Exit
   434                              <2> 	EXTERN	_SB16_Start
   435                              <2> 	EXTERN	_SB16_Stop
   436                              <2> 	EXTERN	_SB16_SetCallback
   437                              <2> 	EXTERN	_SB16_SetFormat
   438                              <2> 	EXTERN	_SB16_SetMixers
   439                              <2> 	EXTERN	_SB16_GetChannel
   440                              <2> 
   441                              <2> 
   442                              <2> _SB16_Init_arglen		equ	4
   443                              <2> _SB16_Start_arglen		equ	12
   444                              <2> _SB16_SetCallback_arglen	equ	4
   445                              <2> _SB16_SetFormat_arglen		equ	12
   446                              <2> _SB16_SetMixers_arglen		equ	8
   447                              <1> %include "socket.inc"
   448                              <2> ; Socket (TCP/IP, UDP/IP) functions header file
   449                              <2> ;  By Peter Johnson, 2001
   450                              <2> ;
   451                              <2> ; $Id: socket.inc,v 1.4 2001/12/14 19:31:20 pete Exp $
   452                              <2> 
   453                              <2> 	EXTERN _InitSocket
   454                              <2> 	EXTERN _ExitSocket
   455                              <2> 	EXTERN _Socket_SetCallback
   456                              <2> 	EXTERN _Socket_AddCallback
   457                              <2> 	EXTERN _Socket_accept
   458                              <2> 	EXTERN _Socket_bind
   459                              <2> 	EXTERN _Socket_close
   460                              <2> 	EXTERN _Socket_connect
   461                              <2> 	EXTERN _Socket_getpeername
   462                              <2> 	EXTERN _Socket_getsockname
   463                              <2> 	EXTERN _Socket_ntohl
   464                              <2> 	EXTERN _Socket_htonl
   465                              <2> 	EXTERN _Socket_ntohs
   466                              <2> 	EXTERN _Socket_htons
   467                              <2> 	EXTERN _Socket_inet_addr
   468                              <2> 	EXTERN _Socket_inet_ntoa
   469                              <2> 	EXTERN _Socket_listen
   470                              <2> 	EXTERN _Socket_recv
   471                              <2> 	EXTERN _Socket_recvfrom
   472                              <2> 	EXTERN _Socket_send
   473                              <2> 	EXTERN _Socket_sendto
   474                              <2> 	EXTERN _Socket_shutdown
   475                              <2> 	EXTERN _Socket_create
   476                              <2> 	EXTERN _Socket_gethostbyaddr
   477                              <2> 	EXTERN _Socket_gethostbyname
   478                              <2> 	EXTERN _Socket_gethostname
   479                              <2> 	EXTERN _Socket_getsockopt
   480                              <2> 	EXTERN _Socket_setsockopt
   481                              <2> 	EXTERN _Socket_GetLastError
   482                              <2> 
   483                              <2> _Socket_SetCallback_arglen	equ	4
   484                              <2> _Socket_AddCallback_arglen	equ	8
   485                              <2> _Socket_accept_arglen		equ	8
   486                              <2> _Socket_bind_arglen		equ	8
   487                              <2> _Socket_close_arglen		equ	4
   488                              <2> _Socket_connect_arglen		equ	8
   489                              <2> _Socket_getpeername_arglen	equ	8
   490                              <2> _Socket_getsockname_arglen	equ	8
   491                              <2> _Socket_ntohl_arglen		equ	4
   492                              <2> _Socket_htonl_arglen		equ	4
   493                              <2> _Socket_ntohs_arglen		equ	2
   494                              <2> _Socket_htons_arglen		equ	2
   495                              <2> _Socket_inet_addr_arglen	equ	4
   496                              <2> _Socket_inet_ntoa_arglen	equ	4
   497                              <2> _Socket_listen_arglen		equ	8
   498                              <2> _Socket_recv_arglen		equ	16
   499                              <2> _Socket_recvfrom_arglen		equ	20
   500                              <2> _Socket_send_arglen		equ	16
   501                              <2> _Socket_sendto_arglen		equ	20
   502                              <2> _Socket_shutdown_arglen		equ	8
   503                              <2> _Socket_create_arglen		equ	4
   504                              <2> _Socket_gethostbyaddr_arglen	equ	4
   505                              <2> _Socket_gethostbyname_arglen	equ	4
   506                              <2> _Socket_gethostname_arglen	equ	8
   507                              <2> _Socket_getsockopt_arglen	equ	20
   508                              <2> _Socket_setsockopt_arglen	equ	20
   509                              <1> %include "textmode.inc"
   510                              <2> ; Text Mode (80x25x16) header file
   511                              <2> ;  By Peter Johnson, 1999
   512                              <2> ;
   513                              <2> ; $Id: textmode.inc,v 1.3 2000/12/14 07:52:21 pete Exp $
   514                              <2> 
   515                              <2>         EXTERN _SetModeC80
   516                              <2>         EXTERN _TextSetPage
   517                              <2> 	EXTERN _TextClearScreen
   518                              <2> 	EXTERN _TextWriteChar
   519                              <2> 	EXTERN _TextWriteString
   520                              <2> 
   521                              <2> _TextSetPage_arglen             equ     2
   522                              <2> _TextWriteChar_arglen		equ	8
   523                              <2> _TextWriteString_arglen		equ	10
   524                              <1> %include "vbeaf.inc"
   525                              <2> ; VBE/AF loadable graphics driver header file
   526                              <2> ;  By Peter Johnson, 2001
   527                              <2> ;
   528                              <2> ; $Id: vbeaf.inc,v 1.1 2001/03/02 08:03:39 pete Exp $
   529                              <2> 
   530                              <2> 	EXTERN _LoadGraphicsDriver
   531                              <2> 	EXTERN _InitGraphics
   532                              <2> 	EXTERN _ExitGraphics
   533                              <2> 	EXTERN _FindGraphicsMode
   534                              <2> 	EXTERN _SetGraphicsMode
   535                              <2> 	EXTERN _UnsetGraphicsMode
   536                              <2> 	EXTERN _CopyToScreen
   537                              <2> 
   538                              <2> _LoadGraphicsDriver_arglen	equ	4
   539                              <2> _InitGraphics_arglen		equ	12
   540                              <2> _FindGraphicsMode_arglen	equ	10
   541                              <2> _SetGraphicsMode_arglen		equ	2
   542                              <2> _CopyToScreen_arglen		equ	32
   543                                  %include "maptable.inc"
   544                              <1> 
   545 00000000 00FF8080            <1> MapTable db 0,255,128,128
   546 00000004 00FF8080            <1> db 0,255,128,128
   547 00000008 00FF8180            <1> db 0,255,129,128
   548 0000000C 00FF8180            <1> db 0,255,129,128
   549 00000010 00FF8280            <1> db 0,255,130,128
   550 00000014 00FF8280            <1> db 0,255,130,128
   551 00000018 00FF8380            <1> db 0,255,131,128
   552 0000001C 00FF8380            <1> db 0,255,131,128
   553 00000020 00FF8480            <1> db 0,255,132,128
   554 00000024 00FF8480            <1> db 0,255,132,128
   555 00000028 00FF8580            <1> db 0,255,133,128
   556 0000002C 00FF8580            <1> db 0,255,133,128
   557 00000030 00FF8680            <1> db 0,255,134,128
   558 00000034 00FF8680            <1> db 0,255,134,128
   559 00000038 00FF8780            <1> db 0,255,135,128
   560 0000003C 00FF8780            <1> db 0,255,135,128
   561 00000040 00FF8880            <1> db 0,255,136,128
   562 00000044 00FF8880            <1> db 0,255,136,128
   563 00000048 00FF8980            <1> db 0,255,137,128
   564 0000004C 00FF8980            <1> db 0,255,137,128
   565 00000050 00FF8A80            <1> db 0,255,138,128
   566 00000054 00FF8A80            <1> db 0,255,138,128
   567 00000058 00FF8B80            <1> db 0,255,139,128
   568 0000005C 00FF8B80            <1> db 0,255,139,128
   569 00000060 00FF8C80            <1> db 0,255,140,128
   570 00000064 00FF8C80            <1> db 0,255,140,128
   571 00000068 00FF8D80            <1> db 0,255,141,128
   572 0000006C 00FF8D80            <1> db 0,255,141,128
   573 00000070 00FF8E80            <1> db 0,255,142,128
   574 00000074 00FF8E80            <1> db 0,255,142,128
   575 00000078 00FF8F80            <1> db 0,255,143,128
   576 0000007C 00FF8F80            <1> db 0,255,143,128
   577 00000080 00FF9080            <1> db 0,255,144,128
   578 00000084 00FF9080            <1> db 0,255,144,128
   579 00000088 00FF9180            <1> db 0,255,145,128
   580 0000008C 00FF9180            <1> db 0,255,145,128
   581 00000090 00FF9280            <1> db 0,255,146,128
   582 00000094 00FF9280            <1> db 0,255,146,128
   583 00000098 00FF9380            <1> db 0,255,147,128
   584 0000009C 00FF9380            <1> db 0,255,147,128
   585 000000A0 00FF9480            <1> db 0,255,148,128
   586 000000A4 00FF9480            <1> db 0,255,148,128
   587 000000A8 00FF9580            <1> db 0,255,149,128
   588 000000AC 00FF9580            <1> db 0,255,149,128
   589 000000B0 00FF9680            <1> db 0,255,150,128
   590 000000B4 00FF9680            <1> db 0,255,150,128
   591 000000B8 00FF9780            <1> db 0,255,151,128
   592 000000BC 00FF9780            <1> db 0,255,151,128
   593 000000C0 00FF9880            <1> db 0,255,152,128
   594 000000C4 00FF9880            <1> db 0,255,152,128
   595 000000C8 00FF9980            <1> db 0,255,153,128
   596 000000CC 00FF9980            <1> db 0,255,153,128
   597 000000D0 00FF9A80            <1> db 0,255,154,128
   598 000000D4 00FF9A80            <1> db 0,255,154,128
   599 000000D8 00FF9B80            <1> db 0,255,155,128
   600 000000DC 00FF9B80            <1> db 0,255,155,128
   601 000000E0 00FF9C80            <1> db 0,255,156,128
   602 000000E4 00FF9C80            <1> db 0,255,156,128
   603 000000E8 00FF9D80            <1> db 0,255,157,128
   604 000000EC 00FF9D80            <1> db 0,255,157,128
   605 000000F0 00FF9E80            <1> db 0,255,158,128
   606 000000F4 00FF9E80            <1> db 0,255,158,128
   607 000000F8 00FF9F80            <1> db 0,255,159,128
   608 000000FC 00FF9F80            <1> db 0,255,159,128
   609 00000100 00FFA080            <1> db 0,255,160,128
   610 00000104 00FFA080            <1> db 0,255,160,128
   611 00000108 00FFA180            <1> db 0,255,161,128
   612 0000010C 00FFA180            <1> db 0,255,161,128
   613 00000110 00FFA280            <1> db 0,255,162,128
   614 00000114 00FFA280            <1> db 0,255,162,128
   615 00000118 00FFA380            <1> db 0,255,163,128
   616 0000011C 00FFA380            <1> db 0,255,163,128
   617 00000120 00FFA480            <1> db 0,255,164,128
   618 00000124 00FFA480            <1> db 0,255,164,128
   619 00000128 00FFA580            <1> db 0,255,165,128
   620 0000012C 00FFA580            <1> db 0,255,165,128
   621 00000130 00FFA680            <1> db 0,255,166,128
   622 00000134 00FFA680            <1> db 0,255,166,128
   623 00000138 00FFA780            <1> db 0,255,167,128
   624 0000013C 00FFA780            <1> db 0,255,167,128
   625 00000140 00FFA880            <1> db 0,255,168,128
   626 00000144 00FFA880            <1> db 0,255,168,128
   627 00000148 00FFA980            <1> db 0,255,169,128
   628 0000014C 00FFA980            <1> db 0,255,169,128
   629 00000150 00FFAA80            <1> db 0,255,170,128
   630 00000154 00FFAA80            <1> db 0,255,170,128
   631 00000158 00FFAB80            <1> db 0,255,171,128
   632 0000015C 00FFAB80            <1> db 0,255,171,128
   633 00000160 00FFAC80            <1> db 0,255,172,128
   634 00000164 00FFAC80            <1> db 0,255,172,128
   635 00000168 00FFAD80            <1> db 0,255,173,128
   636 0000016C 00FFAD80            <1> db 0,255,173,128
   637 00000170 00FFAE80            <1> db 0,255,174,128
   638 00000174 00FFAE80            <1> db 0,255,174,128
   639 00000178 00FFAF80            <1> db 0,255,175,128
   640 0000017C 00FFAF80            <1> db 0,255,175,128
   641 00000180 00FFB080            <1> db 0,255,176,128
   642 00000184 00FFB080            <1> db 0,255,176,128
   643 00000188 00FFB180            <1> db 0,255,177,128
   644 0000018C 00FFB180            <1> db 0,255,177,128
   645 00000190 00FFB280            <1> db 0,255,178,128
   646 00000194 00FFB280            <1> db 0,255,178,128
   647 00000198 00FFB380            <1> db 0,255,179,128
   648 0000019C 00FFB380            <1> db 0,255,179,128
   649 000001A0 00FFB480            <1> db 0,255,180,128
   650 000001A4 00FFB480            <1> db 0,255,180,128
   651 000001A8 00FFB580            <1> db 0,255,181,128
   652 000001AC 00FFB580            <1> db 0,255,181,128
   653 000001B0 00FFB680            <1> db 0,255,182,128
   654 000001B4 00FFB680            <1> db 0,255,182,128
   655 000001B8 00FFB780            <1> db 0,255,183,128
   656 000001BC 00FFB780            <1> db 0,255,183,128
   657 000001C0 00FFB880            <1> db 0,255,184,128
   658 000001C4 00FFB880            <1> db 0,255,184,128
   659 000001C8 00FFB980            <1> db 0,255,185,128
   660 000001CC 00FFB980            <1> db 0,255,185,128
   661 000001D0 00FFBA80            <1> db 0,255,186,128
   662 000001D4 00FFBA80            <1> db 0,255,186,128
   663 000001D8 00FFBB80            <1> db 0,255,187,128
   664 000001DC 00FFBB80            <1> db 0,255,187,128
   665 000001E0 00FFBC80            <1> db 0,255,188,128
   666 000001E4 00FFBC80            <1> db 0,255,188,128
   667 000001E8 00FFBD80            <1> db 0,255,189,128
   668 000001EC 00FFBD80            <1> db 0,255,189,128
   669 000001F0 00FFBE80            <1> db 0,255,190,128
   670 000001F4 00FFBE80            <1> db 0,255,190,128
   671 000001F8 00FFBF80            <1> db 0,255,191,128
   672 000001FC 00FFBF80            <1> db 0,255,191,128
   673 00000200 00FFBF80            <1> db 0,255,191,128
   674 00000204 00FFC080            <1> db 0,255,192,128
   675 00000208 00FFC080            <1> db 0,255,192,128
   676 0000020C 00FFC180            <1> db 0,255,193,128
   677 00000210 00FFC180            <1> db 0,255,193,128
   678 00000214 00FFC280            <1> db 0,255,194,128
   679 00000218 00FFC280            <1> db 0,255,194,128
   680 0000021C 00FFC380            <1> db 0,255,195,128
   681 00000220 00FFC380            <1> db 0,255,195,128
   682 00000224 00FFC480            <1> db 0,255,196,128
   683 00000228 00FFC480            <1> db 0,255,196,128
   684 0000022C 00FFC580            <1> db 0,255,197,128
   685 00000230 00FFC580            <1> db 0,255,197,128
   686 00000234 00FFC680            <1> db 0,255,198,128
   687 00000238 00FFC680            <1> db 0,255,198,128
   688 0000023C 00FFC780            <1> db 0,255,199,128
   689 00000240 00FFC780            <1> db 0,255,199,128
   690 00000244 00FFC880            <1> db 0,255,200,128
   691 00000248 00FFC880            <1> db 0,255,200,128
   692 0000024C 00FFC980            <1> db 0,255,201,128
   693 00000250 00FFC980            <1> db 0,255,201,128
   694 00000254 00FFCA80            <1> db 0,255,202,128
   695 00000258 00FFCA80            <1> db 0,255,202,128
   696 0000025C 00FFCB80            <1> db 0,255,203,128
   697 00000260 00FFCB80            <1> db 0,255,203,128
   698 00000264 00FFCC80            <1> db 0,255,204,128
   699 00000268 00FFCC80            <1> db 0,255,204,128
   700 0000026C 00FFCD80            <1> db 0,255,205,128
   701 00000270 00FFCD80            <1> db 0,255,205,128
   702 00000274 00FFCE80            <1> db 0,255,206,128
   703 00000278 00FFCE80            <1> db 0,255,206,128
   704 0000027C 00FFCF80            <1> db 0,255,207,128
   705 00000280 00FFCF80            <1> db 0,255,207,128
   706 00000284 00FFD080            <1> db 0,255,208,128
   707 00000288 00FFD080            <1> db 0,255,208,128
   708 0000028C 00FFD180            <1> db 0,255,209,128
   709 00000290 00FFD180            <1> db 0,255,209,128
   710 00000294 00FFD280            <1> db 0,255,210,128
   711 00000298 00FFD280            <1> db 0,255,210,128
   712 0000029C 00FFD380            <1> db 0,255,211,128
   713 000002A0 00FFD380            <1> db 0,255,211,128
   714 000002A4 00FFD480            <1> db 0,255,212,128
   715 000002A8 00FFD480            <1> db 0,255,212,128
   716 000002AC 00FFD580            <1> db 0,255,213,128
   717 000002B0 00FFD580            <1> db 0,255,213,128
   718 000002B4 00FFD680            <1> db 0,255,214,128
   719 000002B8 00FFD680            <1> db 0,255,214,128
   720 000002BC 00FFD780            <1> db 0,255,215,128
   721 000002C0 00FFD780            <1> db 0,255,215,128
   722 000002C4 00FFD880            <1> db 0,255,216,128
   723 000002C8 00FFD880            <1> db 0,255,216,128
   724 000002CC 00FFD980            <1> db 0,255,217,128
   725 000002D0 00FFD980            <1> db 0,255,217,128
   726 000002D4 00FFDA80            <1> db 0,255,218,128
   727 000002D8 00FFDA80            <1> db 0,255,218,128
   728 000002DC 00FFDB80            <1> db 0,255,219,128
   729 000002E0 00FFDB80            <1> db 0,255,219,128
   730 000002E4 00FFDC80            <1> db 0,255,220,128
   731 000002E8 00FFDC80            <1> db 0,255,220,128
   732 000002EC 00FFDD80            <1> db 0,255,221,128
   733 000002F0 00FFDD80            <1> db 0,255,221,128
   734 000002F4 00FFDE80            <1> db 0,255,222,128
   735 000002F8 00FFDE80            <1> db 0,255,222,128
   736 000002FC 00FFDF80            <1> db 0,255,223,128
   737 00000300 00FFDF80            <1> db 0,255,223,128
   738 00000304 00FFE080            <1> db 0,255,224,128
   739 00000308 00FFE080            <1> db 0,255,224,128
   740 0000030C 00FFE180            <1> db 0,255,225,128
   741 00000310 00FFE180            <1> db 0,255,225,128
   742 00000314 00FFE280            <1> db 0,255,226,128
   743 00000318 00FFE280            <1> db 0,255,226,128
   744 0000031C 00FFE380            <1> db 0,255,227,128
   745 00000320 00FFE380            <1> db 0,255,227,128
   746 00000324 00FFE480            <1> db 0,255,228,128
   747 00000328 00FFE480            <1> db 0,255,228,128
   748 0000032C 00FFE580            <1> db 0,255,229,128
   749 00000330 00FFE580            <1> db 0,255,229,128
   750 00000334 00FFE680            <1> db 0,255,230,128
   751 00000338 00FFE680            <1> db 0,255,230,128
   752 0000033C 00FFE780            <1> db 0,255,231,128
   753 00000340 00FFE780            <1> db 0,255,231,128
   754 00000344 00FFE880            <1> db 0,255,232,128
   755 00000348 00FFE880            <1> db 0,255,232,128
   756 0000034C 00FFE980            <1> db 0,255,233,128
   757 00000350 00FFE980            <1> db 0,255,233,128
   758 00000354 00FFEA80            <1> db 0,255,234,128
   759 00000358 00FFEA80            <1> db 0,255,234,128
   760 0000035C 00FFEB80            <1> db 0,255,235,128
   761 00000360 00FFEB80            <1> db 0,255,235,128
   762 00000364 00FFEC80            <1> db 0,255,236,128
   763 00000368 00FFEC80            <1> db 0,255,236,128
   764 0000036C 00FFED80            <1> db 0,255,237,128
   765 00000370 00FFED80            <1> db 0,255,237,128
   766 00000374 00FFEE80            <1> db 0,255,238,128
   767 00000378 00FFEE80            <1> db 0,255,238,128
   768 0000037C 00FFEF80            <1> db 0,255,239,128
   769 00000380 00FFEF80            <1> db 0,255,239,128
   770 00000384 00FFF080            <1> db 0,255,240,128
   771 00000388 00FFF080            <1> db 0,255,240,128
   772 0000038C 00FFF180            <1> db 0,255,241,128
   773 00000390 00FFF180            <1> db 0,255,241,128
   774 00000394 00FFF280            <1> db 0,255,242,128
   775 00000398 00FFF280            <1> db 0,255,242,128
   776 0000039C 00FFF380            <1> db 0,255,243,128
   777 000003A0 00FFF380            <1> db 0,255,243,128
   778 000003A4 00FFF480            <1> db 0,255,244,128
   779 000003A8 00FFF480            <1> db 0,255,244,128
   780 000003AC 00FFF580            <1> db 0,255,245,128
   781 000003B0 00FFF580            <1> db 0,255,245,128
   782 000003B4 00FFF680            <1> db 0,255,246,128
   783 000003B8 00FFF680            <1> db 0,255,246,128
   784 000003BC 00FFF780            <1> db 0,255,247,128
   785 000003C0 00FFF780            <1> db 0,255,247,128
   786 000003C4 00FFF880            <1> db 0,255,248,128
   787 000003C8 00FFF880            <1> db 0,255,248,128
   788 000003CC 00FFF980            <1> db 0,255,249,128
   789 000003D0 00FFF980            <1> db 0,255,249,128
   790 000003D4 00FFFA80            <1> db 0,255,250,128
   791 000003D8 00FFFA80            <1> db 0,255,250,128
   792 000003DC 00FFFB80            <1> db 0,255,251,128
   793 000003E0 00FFFB80            <1> db 0,255,251,128
   794 000003E4 00FFFC80            <1> db 0,255,252,128
   795 000003E8 00FFFC80            <1> db 0,255,252,128
   796 000003EC 00FFFD80            <1> db 0,255,253,128
   797 000003F0 00FFFD80            <1> db 0,255,253,128
   798 000003F4 00FFFE80            <1> db 0,255,254,128
   799 000003F8 00FFFE80            <1> db 0,255,254,128
   800 000003FC 00FFFF80            <1> db 0,255,255,128
   801                                  ;%include "libmp4.inc"
   802                                  
   803                                  	BITS 32
   804                                  
   805                                  	GLOBAL _main
   806                                  
   807                                  ; Define Keyboard Scancodes
   808                                  ESC		EQU	1
   809                                  UPARROW		EQU	72	; maybe slide the window by 1/2? 1/4?
   810                                  LEFTARROW	EQU	75
   811                                  RIGHTARROW	EQU	77
   812                                  DOWNARROW	EQU	80
   813                                  
   814                                  QUIT_BIT	EQU	1
   815                                  ZOOM_IN_BIT	EQU	2
   816                                  ZOOM_OUT_BIT	EQU	4
   817                                  ZOOM_BITS	EQU	6
   818                                  
   819                                  ; Complex Structure
   820                                  STRUC Complex
   821 00000000 <res 00000008>          .Real	resq	1
   822 00000008 <res 00000008>          .Imag	resq	1
   823                                  ENDSTRUC
   824                                  
   825                                  	SECTION .bss
   826                                  
   827 00000000 <res 00000004>          _ScreenOff	resd	1	; pointer to screen buffer
   828 00000004 <res 00000004>          _MandelOff	resd	1	; pointer to Mandelbrot Buffer
   829 00000008 <res 00000002>          _GraphicsMode	resw	1	; ex291 graphics mode
   830                                  
   831 0000000A <res 00000001>          _kbINT		resb	1	; mapped keyboard interrupt
   832 0000000B <res 00000001>          _kbIRQ		resb	1	; mapped keyboard irq
   833 0000000C <res 00000002>          _kbPort		resw	1	; mapped keyboard port
   834                                  
   835 0000000E <res 00000002>          _MouseSeg	resw	1       ; real mode segment for MouseCallback
   836 00000010 <res 00000002>          _MouseOff	resw	1	; real mode offset for MouseCallback
   837                                  
   838 00000012 <res 00000001>          _CameraPos	resb	1	; Current Camera Position
   839                                  
   840 00000013 <res 00000001>          _MPFlags	resb	1	; MP flags
   841                                  				; Bit 0 - User Exit Flag
   842                                  				; Bit 1 - Calculation in progress
   843                                  				; Bit 2 - Zoom started
   844                                  
   845                                  				
   846                                  	SECTION .data
   847                                  
   848                                  ; Floating Point Values Defined for Easy Access
   849 00000000 0000803F                _RealOne	dd	1.0
   850                                  
   851 00000004 00000000000004C0        _MinX		dq	-2.5
   852 0000000C 000000000000F83F        _MaxX		dq	1.5
   853 00000014 000000000000F8BF        _MinY		dq	-1.5
   854 0000001C 000000000000F83F        _MaxY		dq	1.5
   855                                  
   856 00000024 0000                    _MouseX		dw	0
   857 00000026 0100                    _MouseY		dw	1
   858                                  
   859                                  	SECTION .text
   860                                  
   861                                  ; Program Start
   862                                  _main
   863 00000400 E8(00000000)            	call	_LibInit
   864                                  
   865                                  	; Allocate Screen Buffer
   866                                  	invoke	_AllocMem, dword 640*480*4
   867                              <1> %rotate -1
   868                              <1> 
   869                              <1> %rep (%0-1)
   870                              <1> 
   871                              <1> 
   872                              <1> 
   873                              <1> 
   874                              <1> 
   875                              <1> 
   876                              <1> 
   877                              <1>  %ifidni %1, cs
   878                              <1>  o16 push %1
   879                              <1>  %elifidni %1, ds
   880                              <1>  o16 push %1
   881                              <1>  %elifidni %1, es
   882                              <1>  o16 push %1
   883                              <1>  %elifidni %1, fs
   884                              <1>  o16 push %1
   885                              <1>  %elifidni %1, gs
   886                              <1>  o16 push %1
   887                              <1>  %elifidni %1, word cs
   888                              <1>  o16 push %1
   889                              <1>  %elifidni %1, word ds
   890                              <1>  o16 push %1
   891                              <1>  %elifidni %1, word es
   892                              <1>  o16 push %1
   893                              <1>  %elifidni %1, word fs
   894                              <1>  o16 push %1
   895                              <1>  %elifidni %1, word gs
   896                              <1>  o16 push %1
   897                              <1>  %else
   898                              <1>  push %1
   899                              <1>  %endif
   900                              <1> 
   901                              <1>  %rotate -1
   902                              <1> %endrep
   903                              <2> 
   904                              <2> 
   905                              <2> 
   906                              <2> 
   907                              <2> 
   908                              <2> 
   909                              <2> 
   910                              <2>  %ifidni %1, cs
   911                              <2>  o16 push %1
   912                              <2>  %elifidni %1, ds
   913                              <2>  o16 push %1
   914                              <2>  %elifidni %1, es
   915                              <2>  o16 push %1
   916                              <2>  %elifidni %1, fs
   917                              <2>  o16 push %1
   918                              <2>  %elifidni %1, gs
   919                              <2>  o16 push %1
   920                              <2>  %elifidni %1, word cs
   921                              <2>  o16 push %1
   922                              <2>  %elifidni %1, word ds
   923                              <2>  o16 push %1
   924                              <2>  %elifidni %1, word es
   925                              <2>  o16 push %1
   926                              <2>  %elifidni %1, word fs
   927                              <2>  o16 push %1
   928                              <2>  %elifidni %1, word gs
   929                              <2>  o16 push %1
   930                              <2>  %else
   931 00000405 6800C01200          <2>  push %1
   932                              <2>  %endif
   933                              <2> 
   934                              <2>  %rotate -1
   935 0000040A E8(00000000)        <1> call %1
   936                              <1> %if (%0!=1)
   937 0000040F 83C404              <1>  add esp, byte %1_arglen
   938                              <1> %endif
   939 00000412 83F8FF                  	cmp	eax, -1
   940 00000415 0F8493000000            	je	near .memerror
   941 0000041B A3[00000000]            	mov	[_ScreenOff], eax
   942                                  
   943                                  	; Allocate Buffer
   944                                  	invoke	_AllocMem, dword 640*480*1
   945                              <1> %rotate -1
   946                              <1> 
   947                              <1> %rep (%0-1)
   948                              <1> 
   949                              <1> 
   950                              <1> 
   951                              <1> 
   952                              <1> 
   953                              <1> 
   954                              <1> 
   955                              <1>  %ifidni %1, cs
   956                              <1>  o16 push %1
   957                              <1>  %elifidni %1, ds
   958                              <1>  o16 push %1
   959                              <1>  %elifidni %1, es
   960                              <1>  o16 push %1
   961                              <1>  %elifidni %1, fs
   962                              <1>  o16 push %1
   963                              <1>  %elifidni %1, gs
   964                              <1>  o16 push %1
   965                              <1>  %elifidni %1, word cs
   966                              <1>  o16 push %1
   967                              <1>  %elifidni %1, word ds
   968                              <1>  o16 push %1
   969                              <1>  %elifidni %1, word es
   970                              <1>  o16 push %1
   971                              <1>  %elifidni %1, word fs
   972                              <1>  o16 push %1
   973                              <1>  %elifidni %1, word gs
   974                              <1>  o16 push %1
   975                              <1>  %else
   976                              <1>  push %1
   977                              <1>  %endif
   978                              <1> 
   979                              <1>  %rotate -1
   980                              <1> %endrep
   981                              <2> 
   982                              <2> 
   983                              <2> 
   984                              <2> 
   985                              <2> 
   986                              <2> 
   987                              <2> 
   988                              <2>  %ifidni %1, cs
   989                              <2>  o16 push %1
   990                              <2>  %elifidni %1, ds
   991                              <2>  o16 push %1
   992                              <2>  %elifidni %1, es
   993                              <2>  o16 push %1
   994                              <2>  %elifidni %1, fs
   995                              <2>  o16 push %1
   996                              <2>  %elifidni %1, gs
   997                              <2>  o16 push %1
   998                              <2>  %elifidni %1, word cs
   999                              <2>  o16 push %1
  1000                              <2>  %elifidni %1, word ds
  1001                              <2>  o16 push %1
  1002                              <2>  %elifidni %1, word es
  1003                              <2>  o16 push %1
  1004                              <2>  %elifidni %1, word fs
  1005                              <2>  o16 push %1
  1006                              <2>  %elifidni %1, word gs
  1007                              <2>  o16 push %1
  1008                              <2>  %else
  1009 00000420 6800B00400          <2>  push %1
  1010                              <2>  %endif
  1011                              <2> 
  1012                              <2>  %rotate -1
  1013 00000425 E8(00000000)        <1> call %1
  1014                              <1> %if (%0!=1)
  1015 0000042A 83C404              <1>  add esp, byte %1_arglen
  1016                              <1> %endif
  1017 0000042D 83F8FF                  	cmp	eax, -1
  1018 00000430 0F8478000000            	je	near .memerror
  1019 00000436 A3[04000000]            	mov	[_MandelOff], eax
  1020                                  
  1021                                  	; Allocate Font Image Buffer
  1022                                  ;	invoke	_AllocMem, dword 128*16*16*4
  1023                                  ;	cmp	eax, -1
  1024                                  ;	je	near .memerror
  1025                                  ;	mov	[_FontOff], eax
  1026                                  
  1027                                  	; Graphics Init
  1028                                  	invoke	_InitGraphics, dword _kbINT, dword _kbIRQ, dword _kbPort
  1029                              <1> %rotate -1
  1030                              <1> 
  1031                              <1> %rep (%0-1)
  1032                              <1> 
  1033                              <1> 
  1034                              <1> 
  1035                              <1> 
  1036                              <1> 
  1037                              <1> 
  1038                              <1> 
  1039                              <1>  %ifidni %1, cs
  1040                              <1>  o16 push %1
  1041                              <1>  %elifidni %1, ds
  1042                              <1>  o16 push %1
  1043                              <1>  %elifidni %1, es
  1044                              <1>  o16 push %1
  1045                              <1>  %elifidni %1, fs
  1046                              <1>  o16 push %1
  1047                              <1>  %elifidni %1, gs
  1048                              <1>  o16 push %1
  1049                              <1>  %elifidni %1, word cs
  1050                              <1>  o16 push %1
  1051                              <1>  %elifidni %1, word ds
  1052                              <1>  o16 push %1
  1053                              <1>  %elifidni %1, word es
  1054                              <1>  o16 push %1
  1055                              <1>  %elifidni %1, word fs
  1056                              <1>  o16 push %1
  1057                              <1>  %elifidni %1, word gs
  1058                              <1>  o16 push %1
  1059                              <1>  %else
  1060                              <1>  push %1
  1061                              <1>  %endif
  1062                              <1> 
  1063                              <1>  %rotate -1
  1064                              <1> %endrep
  1065                              <2> 
  1066                              <2> 
  1067                              <2> 
  1068                              <2> 
  1069                              <2> 
  1070                              <2> 
  1071                              <2> 
  1072                              <2>  %ifidni %1, cs
  1073                              <2>  o16 push %1
  1074                              <2>  %elifidni %1, ds
  1075                              <2>  o16 push %1
  1076                              <2>  %elifidni %1, es
  1077                              <2>  o16 push %1
  1078                              <2>  %elifidni %1, fs
  1079                              <2>  o16 push %1
  1080                              <2>  %elifidni %1, gs
  1081                              <2>  o16 push %1
  1082                              <2>  %elifidni %1, word cs
  1083                              <2>  o16 push %1
  1084                              <2>  %elifidni %1, word ds
  1085                              <2>  o16 push %1
  1086                              <2>  %elifidni %1, word es
  1087                              <2>  o16 push %1
  1088                              <2>  %elifidni %1, word fs
  1089                              <2>  o16 push %1
  1090                              <2>  %elifidni %1, word gs
  1091                              <2>  o16 push %1
  1092                              <2>  %else
  1093 0000043B 68[0C000000]        <2>  push %1
  1094                              <2>  %endif
  1095                              <2> 
  1096                              <2>  %rotate -1
  1097                              <2> 
  1098                              <2> 
  1099                              <2> 
  1100                              <2> 
  1101                              <2> 
  1102                              <2> 
  1103                              <2> 
  1104                              <2>  %ifidni %1, cs
  1105                              <2>  o16 push %1
  1106                              <2>  %elifidni %1, ds
  1107                              <2>  o16 push %1
  1108                              <2>  %elifidni %1, es
  1109                              <2>  o16 push %1
  1110                              <2>  %elifidni %1, fs
  1111                              <2>  o16 push %1
  1112                              <2>  %elifidni %1, gs
  1113                              <2>  o16 push %1
  1114                              <2>  %elifidni %1, word cs
  1115                              <2>  o16 push %1
  1116                              <2>  %elifidni %1, word ds
  1117                              <2>  o16 push %1
  1118                              <2>  %elifidni %1, word es
  1119                              <2>  o16 push %1
  1120                              <2>  %elifidni %1, word fs
  1121                              <2>  o16 push %1
  1122                              <2>  %elifidni %1, word gs
  1123                              <2>  o16 push %1
  1124                              <2>  %else
  1125 00000440 68[0B000000]        <2>  push %1
  1126                              <2>  %endif
  1127                              <2> 
  1128                              <2>  %rotate -1
  1129                              <2> 
  1130                              <2> 
  1131                              <2> 
  1132                              <2> 
  1133                              <2> 
  1134                              <2> 
  1135                              <2> 
  1136                              <2>  %ifidni %1, cs
  1137                              <2>  o16 push %1
  1138                              <2>  %elifidni %1, ds
  1139                              <2>  o16 push %1
  1140                              <2>  %elifidni %1, es
  1141                              <2>  o16 push %1
  1142                              <2>  %elifidni %1, fs
  1143                              <2>  o16 push %1
  1144                              <2>  %elifidni %1, gs
  1145                              <2>  o16 push %1
  1146                              <2>  %elifidni %1, word cs
  1147                              <2>  o16 push %1
  1148                              <2>  %elifidni %1, word ds
  1149                              <2>  o16 push %1
  1150                              <2>  %elifidni %1, word es
  1151                              <2>  o16 push %1
  1152                              <2>  %elifidni %1, word fs
  1153                              <2>  o16 push %1
  1154                              <2>  %elifidni %1, word gs
  1155                              <2>  o16 push %1
  1156                              <2>  %else
  1157 00000445 68[0A000000]        <2>  push %1
  1158                              <2>  %endif
  1159                              <2> 
  1160                              <2>  %rotate -1
  1161 0000044A E8(00000000)        <1> call %1
  1162                              <1> %if (%0!=1)
  1163 0000044F 83C40C              <1>  add esp, byte %1_arglen
  1164                              <1> %endif
  1165 00000452 85C0                    	test	eax, eax
  1166 00000454 0F854F000000            	jnz	near .graphicserror
  1167                                  
  1168                                  	; Find Graphics Mode: 640x480x32, allow driver-emulated modes
  1169                                  	invoke	_FindGraphicsMode, word 640, word 480, word 32, dword 1
  1170                              <1> %rotate -1
  1171                              <1> 
  1172                              <1> %rep (%0-1)
  1173                              <1> 
  1174                              <1> 
  1175                              <1> 
  1176                              <1> 
  1177                              <1> 
  1178                              <1> 
  1179                              <1> 
  1180                              <1>  %ifidni %1, cs
  1181                              <1>  o16 push %1
  1182                              <1>  %elifidni %1, ds
  1183                              <1>  o16 push %1
  1184                              <1>  %elifidni %1, es
  1185                              <1>  o16 push %1
  1186                              <1>  %elifidni %1, fs
  1187                              <1>  o16 push %1
  1188                              <1>  %elifidni %1, gs
  1189                              <1>  o16 push %1
  1190                              <1>  %elifidni %1, word cs
  1191                              <1>  o16 push %1
  1192                              <1>  %elifidni %1, word ds
  1193                              <1>  o16 push %1
  1194                              <1>  %elifidni %1, word es
  1195                              <1>  o16 push %1
  1196                              <1>  %elifidni %1, word fs
  1197                              <1>  o16 push %1
  1198                              <1>  %elifidni %1, word gs
  1199                              <1>  o16 push %1
  1200                              <1>  %else
  1201                              <1>  push %1
  1202                              <1>  %endif
  1203                              <1> 
  1204                              <1>  %rotate -1
  1205                              <1> %endrep
  1206                              <2> 
  1207                              <2> 
  1208                              <2> 
  1209                              <2> 
  1210                              <2> 
  1211                              <2> 
  1212                              <2> 
  1213                              <2>  %ifidni %1, cs
  1214                              <2>  o16 push %1
  1215                              <2>  %elifidni %1, ds
  1216                              <2>  o16 push %1
  1217                              <2>  %elifidni %1, es
  1218                              <2>  o16 push %1
  1219                              <2>  %elifidni %1, fs
  1220                              <2>  o16 push %1
  1221                              <2>  %elifidni %1, gs
  1222                              <2>  o16 push %1
  1223                              <2>  %elifidni %1, word cs
  1224                              <2>  o16 push %1
  1225                              <2>  %elifidni %1, word ds
  1226                              <2>  o16 push %1
  1227                              <2>  %elifidni %1, word es
  1228                              <2>  o16 push %1
  1229                              <2>  %elifidni %1, word fs
  1230                              <2>  o16 push %1
  1231                              <2>  %elifidni %1, word gs
  1232                              <2>  o16 push %1
  1233                              <2>  %else
  1234 0000045A 6801000000          <2>  push %1
  1235                              <2>  %endif
  1236                              <2> 
  1237                              <2>  %rotate -1
  1238                              <2> 
  1239                              <2> 
  1240                              <2> 
  1241                              <2> 
  1242                              <2> 
  1243                              <2> 
  1244                              <2> 
  1245                              <2>  %ifidni %1, cs
  1246                              <2>  o16 push %1
  1247                              <2>  %elifidni %1, ds
  1248                              <2>  o16 push %1
  1249                              <2>  %elifidni %1, es
  1250                              <2>  o16 push %1
  1251                              <2>  %elifidni %1, fs
  1252                              <2>  o16 push %1
  1253                              <2>  %elifidni %1, gs
  1254                              <2>  o16 push %1
  1255                              <2>  %elifidni %1, word cs
  1256                              <2>  o16 push %1
  1257                              <2>  %elifidni %1, word ds
  1258                              <2>  o16 push %1
  1259                              <2>  %elifidni %1, word es
  1260                              <2>  o16 push %1
  1261                              <2>  %elifidni %1, word fs
  1262                              <2>  o16 push %1
  1263                              <2>  %elifidni %1, word gs
  1264                              <2>  o16 push %1
  1265                              <2>  %else
  1266 0000045F 66682000            <2>  push %1
  1267                              <2>  %endif
  1268                              <2> 
  1269                              <2>  %rotate -1
  1270                              <2> 
  1271                              <2> 
  1272                              <2> 
  1273                              <2> 
  1274                              <2> 
  1275                              <2> 
  1276                              <2> 
  1277                              <2>  %ifidni %1, cs
  1278                              <2>  o16 push %1
  1279                              <2>  %elifidni %1, ds
  1280                              <2>  o16 push %1
  1281                              <2>  %elifidni %1, es
  1282                              <2>  o16 push %1
  1283                              <2>  %elifidni %1, fs
  1284                              <2>  o16 push %1
  1285                              <2>  %elifidni %1, gs
  1286                              <2>  o16 push %1
  1287                              <2>  %elifidni %1, word cs
  1288                              <2>  o16 push %1
  1289                              <2>  %elifidni %1, word ds
  1290                              <2>  o16 push %1
  1291                              <2>  %elifidni %1, word es
  1292                              <2>  o16 push %1
  1293                              <2>  %elifidni %1, word fs
  1294                              <2>  o16 push %1
  1295                              <2>  %elifidni %1, word gs
  1296                              <2>  o16 push %1
  1297                              <2>  %else
  1298 00000463 6668E001            <2>  push %1
  1299                              <2>  %endif
  1300                              <2> 
  1301                              <2>  %rotate -1
  1302                              <2> 
  1303                              <2> 
  1304                              <2> 
  1305                              <2> 
  1306                              <2> 
  1307                              <2> 
  1308                              <2> 
  1309                              <2>  %ifidni %1, cs
  1310                              <2>  o16 push %1
  1311                              <2>  %elifidni %1, ds
  1312                              <2>  o16 push %1
  1313                              <2>  %elifidni %1, es
  1314                              <2>  o16 push %1
  1315                              <2>  %elifidni %1, fs
  1316                              <2>  o16 push %1
  1317                              <2>  %elifidni %1, gs
  1318                              <2>  o16 push %1
  1319                              <2>  %elifidni %1, word cs
  1320                              <2>  o16 push %1
  1321                              <2>  %elifidni %1, word ds
  1322                              <2>  o16 push %1
  1323                              <2>  %elifidni %1, word es
  1324                              <2>  o16 push %1
  1325                              <2>  %elifidni %1, word fs
  1326                              <2>  o16 push %1
  1327                              <2>  %elifidni %1, word gs
  1328                              <2>  o16 push %1
  1329                              <2>  %else
  1330 00000467 66688002            <2>  push %1
  1331                              <2>  %endif
  1332                              <2> 
  1333                              <2>  %rotate -1
  1334 0000046B E8(00000000)        <1> call %1
  1335                              <1> %if (%0!=1)
  1336 00000470 83C40A              <1>  add esp, byte %1_arglen
  1337                              <1> %endif
  1338 00000473 66A3[08000000]          	mov	[_GraphicsMode], ax
  1339                                  
  1340                                  	; Mouse/Keyboard init
  1341 00000479 E80A030000              	call	_InstallKeyboard
  1342                                  	invoke	_SetGraphicsMode, word [_GraphicsMode]
  1343                              <1> %rotate -1
  1344                              <1> 
  1345                              <1> %rep (%0-1)
  1346                              <1> 
  1347                              <1> 
  1348                              <1> 
  1349                              <1> 
  1350                              <1> 
  1351                              <1> 
  1352                              <1> 
  1353                              <1>  %ifidni %1, cs
  1354                              <1>  o16 push %1
  1355                              <1>  %elifidni %1, ds
  1356                              <1>  o16 push %1
  1357                              <1>  %elifidni %1, es
  1358                              <1>  o16 push %1
  1359                              <1>  %elifidni %1, fs
  1360                              <1>  o16 push %1
  1361                              <1>  %elifidni %1, gs
  1362                              <1>  o16 push %1
  1363                              <1>  %elifidni %1, word cs
  1364                              <1>  o16 push %1
  1365                              <1>  %elifidni %1, word ds
  1366                              <1>  o16 push %1
  1367                              <1>  %elifidni %1, word es
  1368                              <1>  o16 push %1
  1369                              <1>  %elifidni %1, word fs
  1370                              <1>  o16 push %1
  1371                              <1>  %elifidni %1, word gs
  1372                              <1>  o16 push %1
  1373                              <1>  %else
  1374                              <1>  push %1
  1375                              <1>  %endif
  1376                              <1> 
  1377                              <1>  %rotate -1
  1378                              <1> %endrep
  1379                              <2> 
  1380                              <2> 
  1381                              <2> 
  1382                              <2> 
  1383                              <2> 
  1384                              <2> 
  1385                              <2> 
  1386                              <2>  %ifidni %1, cs
  1387                              <2>  o16 push %1
  1388                              <2>  %elifidni %1, ds
  1389                              <2>  o16 push %1
  1390                              <2>  %elifidni %1, es
  1391                              <2>  o16 push %1
  1392                              <2>  %elifidni %1, fs
  1393                              <2>  o16 push %1
  1394                              <2>  %elifidni %1, gs
  1395                              <2>  o16 push %1
  1396                              <2>  %elifidni %1, word cs
  1397                              <2>  o16 push %1
  1398                              <2>  %elifidni %1, word ds
  1399                              <2>  o16 push %1
  1400                              <2>  %elifidni %1, word es
  1401                              <2>  o16 push %1
  1402                              <2>  %elifidni %1, word fs
  1403                              <2>  o16 push %1
  1404                              <2>  %elifidni %1, word gs
  1405                              <2>  o16 push %1
  1406                              <2>  %else
  1407 0000047E 66FF35[08000000]    <2>  push %1
  1408                              <2>  %endif
  1409                              <2> 
  1410                              <2>  %rotate -1
  1411 00000485 E8(00000000)        <1> call %1
  1412                              <1> %if (%0!=1)
  1413 0000048A 83C402              <1>  add esp, byte %1_arglen
  1414                              <1> %endif
  1415 0000048D E875030000              	call	_InstallMouse
  1416                                  	;test	eax, eax
  1417                                  	;jnz	.mouseerror
  1418                                  
  1419 00000492 9BDBE3                  	finit
  1420 00000495 E81A000000              	call	_MP4Main	
  1421                                  
  1422                                  .mouseerror
  1423 0000049A E8EB030000              	call	_RemoveMouse
  1424 0000049F E8(00000000)            	call	_UnsetGraphicsMode
  1425 000004A4 E845030000              	call	_RemoveKeyboard
  1426                                  
  1427                                  .graphicserror
  1428 000004A9 E8(00000000)            	call	_ExitGraphics
  1429                                  
  1430                                  .memerror
  1431 000004AE E8(00000000)            	call	_LibExit
  1432                                  	;call	_MP4LibExit
  1433                                  	ret
  1434                              <1> %ifnctx proc
  1435 000004B3 C3                  <1>  ret %1
  1436                              <1> %else
  1437                              <1>  mov esp, ebp
  1438                              <1>  pop ebp
  1439                              <1>  ret %1
  1440                              <1> %endif
  1441                                  
  1442                                  
  1443                                  ;--------------------------------------------------------------
  1444                                  ;--                        MP4Main()                         --
  1445                                  ;--------------------------------------------------------------
  1446                                  _MP4Main
  1447                                  	
  1448                                  	; calculate mandelbrot
  1449                                  	invoke	_CalcAllPixels, dword [_MandelOff]
  1450                              <1> %rotate -1
  1451                              <1> 
  1452                              <1> %rep (%0-1)
  1453                              <1> 
  1454                              <1> 
  1455                              <1> 
  1456                              <1> 
  1457                              <1> 
  1458                              <1> 
  1459                              <1> 
  1460                              <1>  %ifidni %1, cs
  1461                              <1>  o16 push %1
  1462                              <1>  %elifidni %1, ds
  1463                              <1>  o16 push %1
  1464                              <1>  %elifidni %1, es
  1465                              <1>  o16 push %1
  1466                              <1>  %elifidni %1, fs
  1467                              <1>  o16 push %1
  1468                              <1>  %elifidni %1, gs
  1469                              <1>  o16 push %1
  1470                              <1>  %elifidni %1, word cs
  1471                              <1>  o16 push %1
  1472                              <1>  %elifidni %1, word ds
  1473                              <1>  o16 push %1
  1474                              <1>  %elifidni %1, word es
  1475                              <1>  o16 push %1
  1476                              <1>  %elifidni %1, word fs
  1477                              <1>  o16 push %1
  1478                              <1>  %elifidni %1, word gs
  1479                              <1>  o16 push %1
  1480                              <1>  %else
  1481                              <1>  push %1
  1482                              <1>  %endif
  1483                              <1> 
  1484                              <1>  %rotate -1
  1485                              <1> %endrep
  1486                              <2> 
  1487                              <2> 
  1488                              <2> 
  1489                              <2> 
  1490                              <2> 
  1491                              <2> 
  1492                              <2> 
  1493                              <2>  %ifidni %1, cs
  1494                              <2>  o16 push %1
  1495                              <2>  %elifidni %1, ds
  1496                              <2>  o16 push %1
  1497                              <2>  %elifidni %1, es
  1498                              <2>  o16 push %1
  1499                              <2>  %elifidni %1, fs
  1500                              <2>  o16 push %1
  1501                              <2>  %elifidni %1, gs
  1502                              <2>  o16 push %1
  1503                              <2>  %elifidni %1, word cs
  1504                              <2>  o16 push %1
  1505                              <2>  %elifidni %1, word ds
  1506                              <2>  o16 push %1
  1507                              <2>  %elifidni %1, word es
  1508                              <2>  o16 push %1
  1509                              <2>  %elifidni %1, word fs
  1510                              <2>  o16 push %1
  1511                              <2>  %elifidni %1, word gs
  1512                              <2>  o16 push %1
  1513                              <2>  %else
  1514 000004B4 FF35[04000000]      <2>  push %1
  1515                              <2>  %endif
  1516                              <2> 
  1517                              <2>  %rotate -1
  1518 000004BA E8C3000000          <1> call %1
  1519                              <1> %if (%0!=1)
  1520 000004BF 83C404              <1>  add esp, byte %1_arglen
  1521                              <1> %endif
  1522                                  
  1523                                  	; copy to the screen buffer
  1524                                  	invoke	_MapBuffer, dword [_MandelOff], dword [_ScreenOff]
  1525                              <1> %rotate -1
  1526                              <1> 
  1527                              <1> %rep (%0-1)
  1528                              <1> 
  1529                              <1> 
  1530                              <1> 
  1531                              <1> 
  1532                              <1> 
  1533                              <1> 
  1534                              <1> 
  1535                              <1>  %ifidni %1, cs
  1536                              <1>  o16 push %1
  1537                              <1>  %elifidni %1, ds
  1538                              <1>  o16 push %1
  1539                              <1>  %elifidni %1, es
  1540                              <1>  o16 push %1
  1541                              <1>  %elifidni %1, fs
  1542                              <1>  o16 push %1
  1543                              <1>  %elifidni %1, gs
  1544                              <1>  o16 push %1
  1545                              <1>  %elifidni %1, word cs
  1546                              <1>  o16 push %1
  1547                              <1>  %elifidni %1, word ds
  1548                              <1>  o16 push %1
  1549                              <1>  %elifidni %1, word es
  1550                              <1>  o16 push %1
  1551                              <1>  %elifidni %1, word fs
  1552                              <1>  o16 push %1
  1553                              <1>  %elifidni %1, word gs
  1554                              <1>  o16 push %1
  1555                              <1>  %else
  1556                              <1>  push %1
  1557                              <1>  %endif
  1558                              <1> 
  1559                              <1>  %rotate -1
  1560                              <1> %endrep
  1561                              <2> 
  1562                              <2> 
  1563                              <2> 
  1564                              <2> 
  1565                              <2> 
  1566                              <2> 
  1567                              <2> 
  1568                              <2>  %ifidni %1, cs
  1569                              <2>  o16 push %1
  1570                              <2>  %elifidni %1, ds
  1571                              <2>  o16 push %1
  1572                              <2>  %elifidni %1, es
  1573                              <2>  o16 push %1
  1574                              <2>  %elifidni %1, fs
  1575                              <2>  o16 push %1
  1576                              <2>  %elifidni %1, gs
  1577                              <2>  o16 push %1
  1578                              <2>  %elifidni %1, word cs
  1579                              <2>  o16 push %1
  1580                              <2>  %elifidni %1, word ds
  1581                              <2>  o16 push %1
  1582                              <2>  %elifidni %1, word es
  1583                              <2>  o16 push %1
  1584                              <2>  %elifidni %1, word fs
  1585                              <2>  o16 push %1
  1586                              <2>  %elifidni %1, word gs
  1587                              <2>  o16 push %1
  1588                              <2>  %else
  1589 000004C2 FF35[00000000]      <2>  push %1
  1590                              <2>  %endif
  1591                              <2> 
  1592                              <2>  %rotate -1
  1593                              <2> 
  1594                              <2> 
  1595                              <2> 
  1596                              <2> 
  1597                              <2> 
  1598                              <2> 
  1599                              <2> 
  1600                              <2>  %ifidni %1, cs
  1601                              <2>  o16 push %1
  1602                              <2>  %elifidni %1, ds
  1603                              <2>  o16 push %1
  1604                              <2>  %elifidni %1, es
  1605                              <2>  o16 push %1
  1606                              <2>  %elifidni %1, fs
  1607                              <2>  o16 push %1
  1608                              <2>  %elifidni %1, gs
  1609                              <2>  o16 push %1
  1610                              <2>  %elifidni %1, word cs
  1611                              <2>  o16 push %1
  1612                              <2>  %elifidni %1, word ds
  1613                              <2>  o16 push %1
  1614                              <2>  %elifidni %1, word es
  1615                              <2>  o16 push %1
  1616                              <2>  %elifidni %1, word fs
  1617                              <2>  o16 push %1
  1618                              <2>  %elifidni %1, word gs
  1619                              <2>  o16 push %1
  1620                              <2>  %else
  1621 000004C8 FF35[04000000]      <2>  push %1
  1622                              <2>  %endif
  1623                              <2> 
  1624                              <2>  %rotate -1
  1625 000004CE E859000000          <1> call %1
  1626                              <1> %if (%0!=1)
  1627 000004D3 83C408              <1>  add esp, byte %1_arglen
  1628                              <1> %endif
  1629                                  
  1630                                  	; display
  1631                                  	invoke	_CopyToScreen, dword [_ScreenOff], dword 640*4, dword 0, dword 0, dword 640, dword 480, dword 0, dword 0
  1632                              <1> %rotate -1
  1633                              <1> 
  1634                              <1> %rep (%0-1)
  1635                              <1> 
  1636                              <1> 
  1637                              <1> 
  1638                              <1> 
  1639                              <1> 
  1640                              <1> 
  1641                              <1> 
  1642                              <1>  %ifidni %1, cs
  1643                              <1>  o16 push %1
  1644                              <1>  %elifidni %1, ds
  1645                              <1>  o16 push %1
  1646                              <1>  %elifidni %1, es
  1647                              <1>  o16 push %1
  1648                              <1>  %elifidni %1, fs
  1649                              <1>  o16 push %1
  1650                              <1>  %elifidni %1, gs
  1651                              <1>  o16 push %1
  1652                              <1>  %elifidni %1, word cs
  1653                              <1>  o16 push %1
  1654                              <1>  %elifidni %1, word ds
  1655                              <1>  o16 push %1
  1656                              <1>  %elifidni %1, word es
  1657                              <1>  o16 push %1
  1658                              <1>  %elifidni %1, word fs
  1659                              <1>  o16 push %1
  1660                              <1>  %elifidni %1, word gs
  1661                              <1>  o16 push %1
  1662                              <1>  %else
  1663                              <1>  push %1
  1664                              <1>  %endif
  1665                              <1> 
  1666                              <1>  %rotate -1
  1667                              <1> %endrep
  1668                              <2> 
  1669                              <2> 
  1670                              <2> 
  1671                              <2> 
  1672                              <2> 
  1673                              <2> 
  1674                              <2> 
  1675                              <2>  %ifidni %1, cs
  1676                              <2>  o16 push %1
  1677                              <2>  %elifidni %1, ds
  1678                              <2>  o16 push %1
  1679                              <2>  %elifidni %1, es
  1680                              <2>  o16 push %1
  1681                              <2>  %elifidni %1, fs
  1682                              <2>  o16 push %1
  1683                              <2>  %elifidni %1, gs
  1684                              <2>  o16 push %1
  1685                              <2>  %elifidni %1, word cs
  1686                              <2>  o16 push %1
  1687                              <2>  %elifidni %1, word ds
  1688                              <2>  o16 push %1
  1689                              <2>  %elifidni %1, word es
  1690                              <2>  o16 push %1
  1691                              <2>  %elifidni %1, word fs
  1692                              <2>  o16 push %1
  1693                              <2>  %elifidni %1, word gs
  1694                              <2>  o16 push %1
  1695                              <2>  %else
  1696 000004D6 6800000000          <2>  push %1
  1697                              <2>  %endif
  1698                              <2> 
  1699                              <2>  %rotate -1
  1700                              <2> 
  1701                              <2> 
  1702                              <2> 
  1703                              <2> 
  1704                              <2> 
  1705                              <2> 
  1706                              <2> 
  1707                              <2>  %ifidni %1, cs
  1708                              <2>  o16 push %1
  1709                              <2>  %elifidni %1, ds
  1710                              <2>  o16 push %1
  1711                              <2>  %elifidni %1, es
  1712                              <2>  o16 push %1
  1713                              <2>  %elifidni %1, fs
  1714                              <2>  o16 push %1
  1715                              <2>  %elifidni %1, gs
  1716                              <2>  o16 push %1
  1717                              <2>  %elifidni %1, word cs
  1718                              <2>  o16 push %1
  1719                              <2>  %elifidni %1, word ds
  1720                              <2>  o16 push %1
  1721                              <2>  %elifidni %1, word es
  1722                              <2>  o16 push %1
  1723                              <2>  %elifidni %1, word fs
  1724                              <2>  o16 push %1
  1725                              <2>  %elifidni %1, word gs
  1726                              <2>  o16 push %1
  1727                              <2>  %else
  1728 000004DB 6800000000          <2>  push %1
  1729                              <2>  %endif
  1730                              <2> 
  1731                              <2>  %rotate -1
  1732                              <2> 
  1733                              <2> 
  1734                              <2> 
  1735                              <2> 
  1736                              <2> 
  1737                              <2> 
  1738                              <2> 
  1739                              <2>  %ifidni %1, cs
  1740                              <2>  o16 push %1
  1741                              <2>  %elifidni %1, ds
  1742                              <2>  o16 push %1
  1743                              <2>  %elifidni %1, es
  1744                              <2>  o16 push %1
  1745                              <2>  %elifidni %1, fs
  1746                              <2>  o16 push %1
  1747                              <2>  %elifidni %1, gs
  1748                              <2>  o16 push %1
  1749                              <2>  %elifidni %1, word cs
  1750                              <2>  o16 push %1
  1751                              <2>  %elifidni %1, word ds
  1752                              <2>  o16 push %1
  1753                              <2>  %elifidni %1, word es
  1754                              <2>  o16 push %1
  1755                              <2>  %elifidni %1, word fs
  1756                              <2>  o16 push %1
  1757                              <2>  %elifidni %1, word gs
  1758                              <2>  o16 push %1
  1759                              <2>  %else
  1760 000004E0 68E0010000          <2>  push %1
  1761                              <2>  %endif
  1762                              <2> 
  1763                              <2>  %rotate -1
  1764                              <2> 
  1765                              <2> 
  1766                              <2> 
  1767                              <2> 
  1768                              <2> 
  1769                              <2> 
  1770                              <2> 
  1771                              <2>  %ifidni %1, cs
  1772                              <2>  o16 push %1
  1773                              <2>  %elifidni %1, ds
  1774                              <2>  o16 push %1
  1775                              <2>  %elifidni %1, es
  1776                              <2>  o16 push %1
  1777                              <2>  %elifidni %1, fs
  1778                              <2>  o16 push %1
  1779                              <2>  %elifidni %1, gs
  1780                              <2>  o16 push %1
  1781                              <2>  %elifidni %1, word cs
  1782                              <2>  o16 push %1
  1783                              <2>  %elifidni %1, word ds
  1784                              <2>  o16 push %1
  1785                              <2>  %elifidni %1, word es
  1786                              <2>  o16 push %1
  1787                              <2>  %elifidni %1, word fs
  1788                              <2>  o16 push %1
  1789                              <2>  %elifidni %1, word gs
  1790                              <2>  o16 push %1
  1791                              <2>  %else
  1792 000004E5 6880020000          <2>  push %1
  1793                              <2>  %endif
  1794                              <2> 
  1795                              <2>  %rotate -1
  1796                              <2> 
  1797                              <2> 
  1798                              <2> 
  1799                              <2> 
  1800                              <2> 
  1801                              <2> 
  1802                              <2> 
  1803                              <2>  %ifidni %1, cs
  1804                              <2>  o16 push %1
  1805                              <2>  %elifidni %1, ds
  1806                              <2>  o16 push %1
  1807                              <2>  %elifidni %1, es
  1808                              <2>  o16 push %1
  1809                              <2>  %elifidni %1, fs
  1810                              <2>  o16 push %1
  1811                              <2>  %elifidni %1, gs
  1812                              <2>  o16 push %1
  1813                              <2>  %elifidni %1, word cs
  1814                              <2>  o16 push %1
  1815                              <2>  %elifidni %1, word ds
  1816                              <2>  o16 push %1
  1817                              <2>  %elifidni %1, word es
  1818                              <2>  o16 push %1
  1819                              <2>  %elifidni %1, word fs
  1820                              <2>  o16 push %1
  1821                              <2>  %elifidni %1, word gs
  1822                              <2>  o16 push %1
  1823                              <2>  %else
  1824 000004EA 6800000000          <2>  push %1
  1825                              <2>  %endif
  1826                              <2> 
  1827                              <2>  %rotate -1
  1828                              <2> 
  1829                              <2> 
  1830                              <2> 
  1831                              <2> 
  1832                              <2> 
  1833                              <2> 
  1834                              <2> 
  1835                              <2>  %ifidni %1, cs
  1836                              <2>  o16 push %1
  1837                              <2>  %elifidni %1, ds
  1838                              <2>  o16 push %1
  1839                              <2>  %elifidni %1, es
  1840                              <2>  o16 push %1
  1841                              <2>  %elifidni %1, fs
  1842                              <2>  o16 push %1
  1843                              <2>  %elifidni %1, gs
  1844                              <2>  o16 push %1
  1845                              <2>  %elifidni %1, word cs
  1846                              <2>  o16 push %1
  1847                              <2>  %elifidni %1, word ds
  1848                              <2>  o16 push %1
  1849                              <2>  %elifidni %1, word es
  1850                              <2>  o16 push %1
  1851                              <2>  %elifidni %1, word fs
  1852                              <2>  o16 push %1
  1853                              <2>  %elifidni %1, word gs
  1854                              <2>  o16 push %1
  1855                              <2>  %else
  1856 000004EF 6800000000          <2>  push %1
  1857                              <2>  %endif
  1858                              <2> 
  1859                              <2>  %rotate -1
  1860                              <2> 
  1861                              <2> 
  1862                              <2> 
  1863                              <2> 
  1864                              <2> 
  1865                              <2> 
  1866                              <2> 
  1867                              <2>  %ifidni %1, cs
  1868                              <2>  o16 push %1
  1869                              <2>  %elifidni %1, ds
  1870                              <2>  o16 push %1
  1871                              <2>  %elifidni %1, es
  1872                              <2>  o16 push %1
  1873                              <2>  %elifidni %1, fs
  1874                              <2>  o16 push %1
  1875                              <2>  %elifidni %1, gs
  1876                              <2>  o16 push %1
  1877                              <2>  %elifidni %1, word cs
  1878                              <2>  o16 push %1
  1879                              <2>  %elifidni %1, word ds
  1880                              <2>  o16 push %1
  1881                              <2>  %elifidni %1, word es
  1882                              <2>  o16 push %1
  1883                              <2>  %elifidni %1, word fs
  1884                              <2>  o16 push %1
  1885                              <2>  %elifidni %1, word gs
  1886                              <2>  o16 push %1
  1887                              <2>  %else
  1888 000004F4 68000A0000          <2>  push %1
  1889                              <2>  %endif
  1890                              <2> 
  1891                              <2>  %rotate -1
  1892                              <2> 
  1893                              <2> 
  1894                              <2> 
  1895                              <2> 
  1896                              <2> 
  1897                              <2> 
  1898                              <2> 
  1899                              <2>  %ifidni %1, cs
  1900                              <2>  o16 push %1
  1901                              <2>  %elifidni %1, ds
  1902                              <2>  o16 push %1
  1903                              <2>  %elifidni %1, es
  1904                              <2>  o16 push %1
  1905                              <2>  %elifidni %1, fs
  1906                              <2>  o16 push %1
  1907                              <2>  %elifidni %1, gs
  1908                              <2>  o16 push %1
  1909                              <2>  %elifidni %1, word cs
  1910                              <2>  o16 push %1
  1911                              <2>  %elifidni %1, word ds
  1912                              <2>  o16 push %1
  1913                              <2>  %elifidni %1, word es
  1914                              <2>  o16 push %1
  1915                              <2>  %elifidni %1, word fs
  1916                              <2>  o16 push %1
  1917                              <2>  %elifidni %1, word gs
  1918                              <2>  o16 push %1
  1919                              <2>  %else
  1920 000004F9 FF35[00000000]      <2>  push %1
  1921                              <2>  %endif
  1922                              <2> 
  1923                              <2>  %rotate -1
  1924 000004FF E8(00000000)        <1> call %1
  1925                              <1> %if (%0!=1)
  1926 00000504 83C420              <1>  add esp, byte %1_arglen
  1927                              <1> %endif
  1928                                  
  1929 00000507 8025[13000000]F9        	and	byte [_MPFlags], ~ZOOM_BITS
  1930                                  .MPLoop
  1931 0000050E F605[13000000]01        	test	byte[_MPFlags], QUIT_BIT
  1932 00000515 0F8510000000            	jnz	near .MainDone
  1933 0000051B F605[13000000]06        	test	byte[_MPFlags], ZOOM_BITS
  1934 00000522 74EA                    	jz	.MPLoop
  1935                                  
  1936                                  	invoke	_SetZoom
  1937                              <1> %rotate -1
  1938                              <1> 
  1939                              <1> %rep (%0-1)
  1940                              <1> 
  1941                              <1> 
  1942                              <1> 
  1943                              <1> 
  1944                              <1> 
  1945                              <1> 
  1946                              <1> 
  1947                              <1>  %ifidni %1, cs
  1948                              <1>  o16 push %1
  1949                              <1>  %elifidni %1, ds
  1950                              <1>  o16 push %1
  1951                              <1>  %elifidni %1, es
  1952                              <1>  o16 push %1
  1953                              <1>  %elifidni %1, fs
  1954                              <1>  o16 push %1
  1955                              <1>  %elifidni %1, gs
  1956                              <1>  o16 push %1
  1957                              <1>  %elifidni %1, word cs
  1958                              <1>  o16 push %1
  1959                              <1>  %elifidni %1, word ds
  1960                              <1>  o16 push %1
  1961                              <1>  %elifidni %1, word es
  1962                              <1>  o16 push %1
  1963                              <1>  %elifidni %1, word fs
  1964                              <1>  o16 push %1
  1965                              <1>  %elifidni %1, word gs
  1966                              <1>  o16 push %1
  1967                              <1>  %else
  1968                              <1>  push %1
  1969                              <1>  %endif
  1970                              <1> 
  1971                              <1>  %rotate -1
  1972                              <1> %endrep
  1973 00000524 E8A3010000          <1> call %1
  1974                              <1> %if (%0!=1)
  1975                              <1>  add esp, byte %1_arglen
  1976                              <1> %endif
  1977 00000529 EB89                    	jmp	short _MP4Main
  1978                                  
  1979                                  .MainDone
  1980                                  	ret
  1981                              <1> %ifnctx proc
  1982 0000052B C3                  <1>  ret %1
  1983                              <1> %else
  1984                              <1>  mov esp, ebp
  1985                              <1>  pop ebp
  1986                              <1>  ret %1
  1987                              <1> %endif
  1988                                  
  1989                                  ;--------------------------------------------------------------
  1990                                  ;--          Replace library calls with your code            --
  1991                                  ;--         Do not forget to add function headers!           --
  1992                                  ;--------------------------------------------------------------
  1993                                  
  1994                                  
  1995                                  ; MapBuffer
  1996                                  proc _MapBuffer
  1997                              <1> %ifctx proc
  1998                              <1> %error Mismatched `endproc'/`proc'
  1999                              <1> %else
  2000                              <1> %push proc
  2001                              <1>  global %1
  2002 0000052C 55                  <1> %1: push ebp
  2003 0000052D 89E5                <1>  mov ebp, esp
  2004                              <1> %assign %$arg 8
  2005                              <1> %assign %$local 0
  2006                              <1> 
  2007                              <1> %define %$procname %1
  2008                              <1> %endif
  2009                                  .src	    arg 4
  2010                              <1> .src equ %$arg
  2011                              <1> 
  2012                              <1> 
  2013                              <1> %assign %$arg %1+%$arg
  2014                                  .dest	    arg 4
  2015                              <1> .dest equ %$arg
  2016                              <1> 
  2017                              <1> 
  2018                              <1> %assign %$arg %1+%$arg
  2019 0000052F 57                      	push edi
  2020 00000530 56                      	push esi
  2021                                  
  2022 00000531 B900B00400              	mov ecx, 640*480
  2023 00000536 8B7508                  	mov esi, [ebp+.src]
  2024 00000539 8B7D0C                  	mov edi, [ebp+.dest]
  2025                                  .mappixel
  2026 0000053C AC                      	lodsb
  2027                                  	; copy al to all lower three bytes
  2028                                  	; - profile against mul by 010101h if you care
  2029                                  
  2030 0000053D 3C00                    	cmp al, 0
  2031 0000053F 7507                    	jne .notzero
  2032                                  	
  2033 00000541 31C0                    	xor eax, eax
  2034 00000543 E930000000              	jmp .store
  2035                                  
  2036                                  .notzero
  2037 00000548 81E0FF000000            	and eax, 0FFh
  2038                                  
  2039 0000054E F6D8                    	neg al
  2040 00000550 8B0485[00000000]        	mov eax, [MapTable + eax*4] 
  2041                                  
  2042                                  	;need to do some flipping of eax
  2043 00000557 89C3                    	mov ebx, eax
  2044 00000559 89C2                    	mov edx, eax
  2045 0000055B C1E018                  	shl eax, 24
  2046 0000055E 81E200FF0000            	and edx, 0000FF00h
  2047 00000564 C1E208                  	shl edx, 8
  2048 00000567 09D0                    	or eax, edx
  2049 00000569 89DA                    	mov edx, ebx
  2050 0000056B 81E20000FFFF            	and edx, 0FFFF0000h
  2051 00000571 C1EA10                  	shr edx, 16
  2052 00000574 88F0                    	mov al, dh
  2053 00000576 88D4                    	mov ah, dl
  2054                                  
  2055                                  .store
  2056 00000578 AB                      	stosd
  2057                                  
  2058 00000579 49                      	dec ecx
  2059 0000057A 75C0                    	jnz .mappixel
  2060                                  
  2061 0000057C 5E                      	pop esi
  2062 0000057D 5F                      	pop edi
  2063                                  
  2064                                  	ret
  2065                              <1> %ifnctx proc
  2066                              <1>  ret %1
  2067                              <1> %else
  2068 0000057E 89EC                <1>  mov esp, ebp
  2069 00000580 5D                  <1>  pop ebp
  2070 00000581 C3                  <1>  ret %1
  2071                              <1> %endif
  2072                                  endproc
  2073                              <1> %ifnctx proc
  2074                              <1> %error Mismatched `endproc'/`proc'
  2075                              <1> %else
  2076                              <1> .STACK_FRAME_SIZE equ %$local
  2077                              <1> 
  2078                              <1> 
  2079                              <1> %ifdef LEGACY_ENDPROC
  2080                              <1>  ret
  2081                              <1> %endif
  2082                              <1> 
  2083                              <1> 
  2084                              <1> 
  2085                              <1> 
  2086                              <1> 
  2087                              <1> 
  2088                              <1> 
  2089                              <1> 
  2090                              <1> 
  2091                              <1> %pop
  2092                              <1> %endif
  2093                                  _MapBuffer_arglen  EQU	8
  2094                                  
  2095                                  ;CalcAllPixels
  2096                                  ;CalcAllPixels(int *dest) - loop over 640*480 pixels calling CalcPixel to get value; write as bytes into dest
  2097                                  
  2098                                  proc _CalcAllPixels
  2099                              <1> %ifctx proc
  2100                              <1> %error Mismatched `endproc'/`proc'
  2101                              <1> %else
  2102                              <1> %push proc
  2103                              <1>  global %1
  2104 00000582 55                  <1> %1: push ebp
  2105 00000583 89E5                <1>  mov ebp, esp
  2106                              <1> %assign %$arg 8
  2107                              <1> %assign %$local 0
  2108                              <1> 
  2109                              <1> %define %$procname %1
  2110                              <1> %endif
  2111                                  .dest	arg	4
  2112                              <1> .dest equ %$arg
  2113                              <1> 
  2114                              <1> 
  2115                              <1> %assign %$arg %1+%$arg
  2116                                  
  2117                                  .C	local	Complex_size	;2 quad word i.e. complex
  2118                              <1> %if %$local == 0
  2119 00000585 81C4DCFFFFFF        <1>  add esp, .STACK_FRAME_SIZE
  2120                              <1> %endif
  2121                              <1> %assign %$local %$local-%1
  2122                              <1> .C equ %$local
  2123                                  .dx	local	8		;quad word
  2124                              <1> %if %$local == 0
  2125                              <1>  add esp, .STACK_FRAME_SIZE
  2126                              <1> %endif
  2127                              <1> %assign %$local %$local-%1
  2128                              <1> .dx equ %$local
  2129                                  .dy	local	8		;quad word
  2130                              <1> %if %$local == 0
  2131                              <1>  add esp, .STACK_FRAME_SIZE
  2132                              <1> %endif
  2133                              <1> %assign %$local %$local-%1
  2134                              <1> .dy equ %$local
  2135                                  .d	local	4		;dword
  2136                              <1> %if %$local == 0
  2137                              <1>  add esp, .STACK_FRAME_SIZE
  2138                              <1> %endif
  2139                              <1> %assign %$local %$local-%1
  2140                              <1> .d equ %$local
  2141                                  
  2142 0000058B 57                      	push	edi
  2143                                  	
  2144                                  	; calculate update intervals for y and x
  2145                                  	; note: this isn't necessarily as accurate as the more expensive
  2146                                  	; recalculating per index due to floating point imprecision
  2147 0000058C B9E0010000              	mov	ecx, 480
  2148 00000591 894DDC                  	mov	[ebp+.d], ecx
  2149 00000594 DB45DC                  	fild	dword [ebp+.d]		;st0 = 480.0
  2150 00000597 DD05[1C000000]          	fld	qword [_MaxY]		;st0 = 1.0
  2151 0000059D DD05[14000000]          	fld	qword [_MinY]		;st0 = 0.0
  2152 000005A3 DEE9                    	fsubp	st1	 		;st0 = 1.0 - 0.0 
  2153 000005A5 DEF1                    	fdivrp	st1	; fdivr ?	;result = 1/480.0
  2154 000005A7 DD5DE0                  	fstp	qword [ebp+.dy]
  2155                                  
  2156 000005AA BA80020000              	mov	edx, 640
  2157 000005AF 8955DC                  	mov	[ebp+.d], edx
  2158 000005B2 DB45DC                  	fild	dword [ebp+.d]
  2159 000005B5 DD05[0C000000]          	fld	qword [_MaxX]
  2160 000005BB DD05[04000000]          	fld	qword [_MinX]
  2161 000005C1 DEE9                    	fsubp	st1	; fsubr ?
  2162 000005C3 DEF1                    	fdivrp	st1	; fdivr ?
  2163 000005C5 DD5DE8                  	fstp	qword [ebp+.dx]		;result = 1/640.0
  2164                                  
  2165 000005C8 8B3D[04000000]          	mov	edi, [_MandelOff]
  2166                                  	; set up Y0
  2167 000005CE DD05[14000000]          	fld	qword[_MinY]		;st0 = 0.0
  2168 000005D4 DD5DF8                  	fstp	qword[ebp + .C + Complex.Imag]
  2169                                  
  2170                                  	; loop 480 times in Y
  2171                                  .loopy
  2172 000005D7 DD05[04000000]          	fld	qword[_MinX]
  2173 000005DD DD5DF0                  	fstp	qword[ebp + .C + Complex.Real]
  2174                                  	;   loop 640 times in X
  2175                                  .loopx
  2176 000005E0 60                      	pusha
  2177                                  	;     invoke _CalcPixel on Complex(x,y)
  2178 000005E1 89E8                    	mov eax, ebp
  2179 000005E3 83C0F0                  	add eax, .C
  2180                                  	invoke	_CalcPixel, eax
  2181                              <1> %rotate -1
  2182                              <1> 
  2183                              <1> %rep (%0-1)
  2184                              <1> 
  2185                              <1> 
  2186                              <1> 
  2187                              <1> 
  2188                              <1> 
  2189                              <1> 
  2190                              <1> 
  2191                              <1>  %ifidni %1, cs
  2192                              <1>  o16 push %1
  2193                              <1>  %elifidni %1, ds
  2194                              <1>  o16 push %1
  2195                              <1>  %elifidni %1, es
  2196                              <1>  o16 push %1
  2197                              <1>  %elifidni %1, fs
  2198                              <1>  o16 push %1
  2199                              <1>  %elifidni %1, gs
  2200                              <1>  o16 push %1
  2201                              <1>  %elifidni %1, word cs
  2202                              <1>  o16 push %1
  2203                              <1>  %elifidni %1, word ds
  2204                              <1>  o16 push %1
  2205                              <1>  %elifidni %1, word es
  2206                              <1>  o16 push %1
  2207                              <1>  %elifidni %1, word fs
  2208                              <1>  o16 push %1
  2209                              <1>  %elifidni %1, word gs
  2210                              <1>  o16 push %1
  2211                              <1>  %else
  2212                              <1>  push %1
  2213                              <1>  %endif
  2214                              <1> 
  2215                              <1>  %rotate -1
  2216                              <1> %endrep
  2217                              <2> 
  2218                              <2> 
  2219                              <2> 
  2220                              <2> 
  2221                              <2> 
  2222                              <2> 
  2223                              <2> 
  2224                              <2>  %ifidni %1, cs
  2225                              <2>  o16 push %1
  2226                              <2>  %elifidni %1, ds
  2227                              <2>  o16 push %1
  2228                              <2>  %elifidni %1, es
  2229                              <2>  o16 push %1
  2230                              <2>  %elifidni %1, fs
  2231                              <2>  o16 push %1
  2232                              <2>  %elifidni %1, gs
  2233                              <2>  o16 push %1
  2234                              <2>  %elifidni %1, word cs
  2235                              <2>  o16 push %1
  2236                              <2>  %elifidni %1, word ds
  2237                              <2>  o16 push %1
  2238                              <2>  %elifidni %1, word es
  2239                              <2>  o16 push %1
  2240                              <2>  %elifidni %1, word fs
  2241                              <2>  o16 push %1
  2242                              <2>  %elifidni %1, word gs
  2243                              <2>  o16 push %1
  2244                              <2>  %else
  2245 000005E6 50                  <2>  push %1
  2246                              <2>  %endif
  2247                              <2> 
  2248                              <2>  %rotate -1
  2249 000005E7 E829000000          <1> call %1
  2250                              <1> %if (%0!=1)
  2251 000005EC 83C404              <1>  add esp, byte %1_arglen
  2252                              <1> %endif
  2253                                  	;     write result to .buf
  2254 000005EF 8807                    	mov	[edi], al
  2255 000005F1 61                      	popa
  2256                                  
  2257                                  	; move right one pixel, one .dx
  2258 000005F2 47                      	inc	edi
  2259 000005F3 DD45F0                  	fld	qword[ebp + .C + Complex.Real]
  2260                                  
  2261 000005F6 DC45E8                  	fadd	qword[ebp+.dx]
  2262 000005F9 DD5DF0                  	fstp	qword[ebp + .C + Complex.Real]
  2263                                  
  2264 000005FC 4A                      	dec	edx
  2265 000005FD 75E1                    	jnz	.loopx
  2266                                  
  2267 000005FF BA80020000              	mov edx, 640
  2268 00000604 DD45F8                  	fld	qword[ebp + .C + Complex.Imag]
  2269 00000607 DC45E0                  	fadd	qword[ebp+.dy]
  2270                                  	;fstp	qword[ebx+Complex.Imag]
  2271 0000060A DD5DF8                  	fstp	qword[ebp + .C + Complex.Imag]
  2272                                  
  2273 0000060D 49                      	dec	ecx
  2274 0000060E 75C7                    	jnz	.loopy
  2275                                  
  2276                                  .done
  2277 00000610 5F                      	pop	edi
  2278                                  	;add	esp, .LOCALS
  2279                                  	ret
  2280                              <1> %ifnctx proc
  2281                              <1>  ret %1
  2282                              <1> %else
  2283 00000611 89EC                <1>  mov esp, ebp
  2284 00000613 5D                  <1>  pop ebp
  2285 00000614 C3                  <1>  ret %1
  2286                              <1> %endif
  2287                                  
  2288                                  endproc
  2289                              <1> %ifnctx proc
  2290                              <1> %error Mismatched `endproc'/`proc'
  2291                              <1> %else
  2292                              <1> .STACK_FRAME_SIZE equ %$local
  2293                              <1> 
  2294                              <1> 
  2295                              <1> %ifdef LEGACY_ENDPROC
  2296                              <1>  ret
  2297                              <1> %endif
  2298                              <1> 
  2299                              <1> 
  2300                              <1> 
  2301                              <1> 
  2302                              <1> 
  2303                              <1> 
  2304                              <1> 
  2305                              <1> 
  2306                              <1> 
  2307                              <1> %pop
  2308                              <1> %endif
  2309                                  _CalcAllPixels_arglen	equ	4
  2310                                  
  2311                                  
  2312                                  
  2313                                  ;CalcPixel
  2314                                  ;CalcPixel(complex *C) - start Z = 0, and apply Z = (Z-1)^2+C up to 255 times return count taken for |Z| to reach at least 2, or 0 if it does not.
  2315                                  proc _CalcPixel
  2316                              <1> %ifctx proc
  2317                              <1> %error Mismatched `endproc'/`proc'
  2318                              <1> %else
  2319                              <1> %push proc
  2320                              <1>  global %1
  2321 00000615 55                  <1> %1: push ebp
  2322 00000616 89E5                <1>  mov ebp, esp
  2323                              <1> %assign %$arg 8
  2324                              <1> %assign %$local 0
  2325                              <1> 
  2326                              <1> %define %$procname %1
  2327                              <1> %endif
  2328                                  .C	arg	4
  2329                              <1> .C equ %$arg
  2330                              <1> 
  2331                              <1> 
  2332                              <1> %assign %$arg %1+%$arg
  2333                                  
  2334                                  .tmp	local	Complex_size	
  2335                              <1> %if %$local == 0
  2336 00000618 81C4F0FFFFFF        <1>  add esp, .STACK_FRAME_SIZE
  2337                              <1> %endif
  2338                              <1> %assign %$local %$local-%1
  2339                              <1> .tmp equ %$local
  2340                                  
  2341                                  	; initialize Z to zero
  2342 0000061E 31D2                    	xor	edx, edx
  2343 00000620 8955F0                  	mov	[ebp + .tmp + Complex.Real], edx
  2344 00000623 8955F4                  	mov	[ebp + .tmp + Complex.Real+4], edx
  2345 00000626 8955F8                  	mov	[ebp + .tmp + Complex.Imag], edx
  2346 00000629 8955FC                  	mov	[ebp + .tmp + Complex.Imag+4], edx
  2347                                  
  2348                                  .iterate
  2349                                  
  2350                                  	; Z2 = (Z-1)^2
  2351 0000062C 52                      	push	edx
  2352 0000062D 89E8                    	mov	eax, ebp
  2353 0000062F 83C0F0                  	add	eax, .tmp
  2354                                  	invoke	_ComplexSquare, eax 
  2355                              <1> %rotate -1
  2356                              <1> 
  2357                              <1> %rep (%0-1)
  2358                              <1> 
  2359                              <1> 
  2360                              <1> 
  2361                              <1> 
  2362                              <1> 
  2363                              <1> 
  2364                              <1> 
  2365                              <1>  %ifidni %1, cs
  2366                              <1>  o16 push %1
  2367                              <1>  %elifidni %1, ds
  2368                              <1>  o16 push %1
  2369                              <1>  %elifidni %1, es
  2370                              <1>  o16 push %1
  2371                              <1>  %elifidni %1, fs
  2372                              <1>  o16 push %1
  2373                              <1>  %elifidni %1, gs
  2374                              <1>  o16 push %1
  2375                              <1>  %elifidni %1, word cs
  2376                              <1>  o16 push %1
  2377                              <1>  %elifidni %1, word ds
  2378                              <1>  o16 push %1
  2379                              <1>  %elifidni %1, word es
  2380                              <1>  o16 push %1
  2381                              <1>  %elifidni %1, word fs
  2382                              <1>  o16 push %1
  2383                              <1>  %elifidni %1, word gs
  2384                              <1>  o16 push %1
  2385                              <1>  %else
  2386                              <1>  push %1
  2387                              <1>  %endif
  2388                              <1> 
  2389                              <1>  %rotate -1
  2390                              <1> %endrep
  2391                              <2> 
  2392                              <2> 
  2393                              <2> 
  2394                              <2> 
  2395                              <2> 
  2396                              <2> 
  2397                              <2> 
  2398                              <2>  %ifidni %1, cs
  2399                              <2>  o16 push %1
  2400                              <2>  %elifidni %1, ds
  2401                              <2>  o16 push %1
  2402                              <2>  %elifidni %1, es
  2403                              <2>  o16 push %1
  2404                              <2>  %elifidni %1, fs
  2405                              <2>  o16 push %1
  2406                              <2>  %elifidni %1, gs
  2407                              <2>  o16 push %1
  2408                              <2>  %elifidni %1, word cs
  2409                              <2>  o16 push %1
  2410                              <2>  %elifidni %1, word ds
  2411                              <2>  o16 push %1
  2412                              <2>  %elifidni %1, word es
  2413                              <2>  o16 push %1
  2414                              <2>  %elifidni %1, word fs
  2415                              <2>  o16 push %1
  2416                              <2>  %elifidni %1, word gs
  2417                              <2>  o16 push %1
  2418                              <2>  %else
  2419 00000632 50                  <2>  push %1
  2420                              <2>  %endif
  2421                              <2> 
  2422                              <2>  %rotate -1
  2423 00000633 E844000000          <1> call %1
  2424                              <1> %if (%0!=1)
  2425 00000638 83C404              <1>  add esp, byte %1_arglen
  2426                              <1> %endif
  2427 0000063B 5A                      	pop	edx
  2428                                  	
  2429                                  	; find C ?
  2430                                  
  2431                                  	; Z2 + C
  2432                                  	; Re(Z2) += Re(C)
  2433 0000063C 8B4D08                  	mov	ecx, [ebp+.C]
  2434 0000063F DD45F0                  	fld	qword [ebp + .tmp + Complex.Real]
  2435 00000642 DD01                    	fld	qword [ecx+Complex.Real]
  2436 00000644 DEC1                    	faddp	st1
  2437 00000646 DD5DF0                  	fstp	qword [ebp + .tmp + Complex.Real]
  2438                                  
  2439                                  	; Im(Z2) += Im(C)
  2440 00000649 DD45F8                  	fld	qword [ebp + .tmp + Complex.Imag]
  2441 0000064C DD4108                  	fld	qword [ecx+Complex.Imag]
  2442 0000064F DEC1                    	faddp	st1
  2443 00000651 DD5DF8                  	fstp	qword [ebp + .tmp + Complex.Imag]
  2444                                  
  2445                                  
  2446                                  	; exit if we're still not done
  2447 00000654 FEC2                    	inc	dl
  2448 00000656 80FAC8                  	cmp	dl, 200
  2449 00000659 741B                    	jz	.infinity
  2450                                  
  2451 0000065B 52                      	push	edx
  2452 0000065C 89E8                    	mov	eax, ebp
  2453 0000065E 83C0F0                  	add	eax, .tmp
  2454                                  	invoke	_IsDiverging, eax
  2455                              <1> %rotate -1
  2456                              <1> 
  2457                              <1> %rep (%0-1)
  2458                              <1> 
  2459                              <1> 
  2460                              <1> 
  2461                              <1> 
  2462                              <1> 
  2463                              <1> 
  2464                              <1> 
  2465                              <1>  %ifidni %1, cs
  2466                              <1>  o16 push %1
  2467                              <1>  %elifidni %1, ds
  2468                              <1>  o16 push %1
  2469                              <1>  %elifidni %1, es
  2470                              <1>  o16 push %1
  2471                              <1>  %elifidni %1, fs
  2472                              <1>  o16 push %1
  2473                              <1>  %elifidni %1, gs
  2474                              <1>  o16 push %1
  2475                              <1>  %elifidni %1, word cs
  2476                              <1>  o16 push %1
  2477                              <1>  %elifidni %1, word ds
  2478                              <1>  o16 push %1
  2479                              <1>  %elifidni %1, word es
  2480                              <1>  o16 push %1
  2481                              <1>  %elifidni %1, word fs
  2482                              <1>  o16 push %1
  2483                              <1>  %elifidni %1, word gs
  2484                              <1>  o16 push %1
  2485                              <1>  %else
  2486                              <1>  push %1
  2487                              <1>  %endif
  2488                              <1> 
  2489                              <1>  %rotate -1
  2490                              <1> %endrep
  2491                              <2> 
  2492                              <2> 
  2493                              <2> 
  2494                              <2> 
  2495                              <2> 
  2496                              <2> 
  2497                              <2> 
  2498                              <2>  %ifidni %1, cs
  2499                              <2>  o16 push %1
  2500                              <2>  %elifidni %1, ds
  2501                              <2>  o16 push %1
  2502                              <2>  %elifidni %1, es
  2503                              <2>  o16 push %1
  2504                              <2>  %elifidni %1, fs
  2505                              <2>  o16 push %1
  2506                              <2>  %elifidni %1, gs
  2507                              <2>  o16 push %1
  2508                              <2>  %elifidni %1, word cs
  2509                              <2>  o16 push %1
  2510                              <2>  %elifidni %1, word ds
  2511                              <2>  o16 push %1
  2512                              <2>  %elifidni %1, word es
  2513                              <2>  o16 push %1
  2514                              <2>  %elifidni %1, word fs
  2515                              <2>  o16 push %1
  2516                              <2>  %elifidni %1, word gs
  2517                              <2>  o16 push %1
  2518                              <2>  %else
  2519 00000661 50                  <2>  push %1
  2520                              <2>  %endif
  2521                              <2> 
  2522                              <2>  %rotate -1
  2523 00000662 E838000000          <1> call %1
  2524                              <1> %if (%0!=1)
  2525 00000667 83C404              <1>  add esp, byte %1_arglen
  2526                              <1> %endif
  2527 0000066A 5A                      	pop	edx
  2528                                  
  2529 0000066B 85C0                    	test	eax, eax
  2530 0000066D 74BD                    	jz	.iterate
  2531                                  
  2532                                  
  2533 0000066F 89D0                    	mov	eax, edx
  2534 00000671 E902000000              	jmp	.done
  2535                                  .infinity
  2536 00000676 31C0                    	xor	eax, eax
  2537                                  .done
  2538                                  	;add	esp, .LOCALS
  2539                                  	ret
  2540                              <1> %ifnctx proc
  2541                              <1>  ret %1
  2542                              <1> %else
  2543 00000678 89EC                <1>  mov esp, ebp
  2544 0000067A 5D                  <1>  pop ebp
  2545 0000067B C3                  <1>  ret %1
  2546                              <1> %endif
  2547                                  
  2548                                  endproc
  2549                              <1> %ifnctx proc
  2550                              <1> %error Mismatched `endproc'/`proc'
  2551                              <1> %else
  2552                              <1> .STACK_FRAME_SIZE equ %$local
  2553                              <1> 
  2554                              <1> 
  2555                              <1> %ifdef LEGACY_ENDPROC
  2556                              <1>  ret
  2557                              <1> %endif
  2558                              <1> 
  2559                              <1> 
  2560                              <1> 
  2561                              <1> 
  2562                              <1> 
  2563                              <1> 
  2564                              <1> 
  2565                              <1> 
  2566                              <1> 
  2567                              <1> %pop
  2568                              <1> %endif
  2569                                  _CalcPixel_arglen	EQU	4
  2570                                  
  2571                                  ;ComplexSquare
  2572                                  ;ComplexSquare(complex *Z) - squares Z and writes it back in place
  2573                                  proc _ComplexSquare
  2574                              <1> %ifctx proc
  2575                              <1> %error Mismatched `endproc'/`proc'
  2576                              <1> %else
  2577                              <1> %push proc
  2578                              <1>  global %1
  2579 0000067C 55                  <1> %1: push ebp
  2580 0000067D 89E5                <1>  mov ebp, esp
  2581                              <1> %assign %$arg 8
  2582                              <1> %assign %$local 0
  2583                              <1> 
  2584                              <1> %define %$procname %1
  2585                              <1> %endif
  2586                                  .Z	arg	4
  2587                              <1> .Z equ %$arg
  2588                              <1> 
  2589                              <1> 
  2590                              <1> %assign %$arg %1+%$arg
  2591                                  	
  2592 0000067F 8B5D08                  	mov	ebx, [ebp+.Z]
  2593                                  
  2594                                  	; 2 a b
  2595 00000682 DD03                    	fld	qword [ebx+Complex.Real]
  2596 00000684 DD4308                  	fld	qword [ebx+Complex.Imag]
  2597 00000687 DEC9                    	fmulp	st1
  2598 00000689 D8C0                    	fadd	st0	; no pop
  2599                                  
  2600                                  	; aa - bb
  2601 0000068B DD03                    	fld	qword [ebx+Complex.Real]
  2602 0000068D D8C8                    	fmul	st0
  2603 0000068F DD4308                  	fld	qword [ebx+Complex.Imag]
  2604 00000692 D8C8                    	fmul	st0
  2605 00000694 DEE9                    	fsubp	st1	;
  2606 00000696 DD1B                    	fstp	qword [ebx+Complex.Real]
  2607                                  
  2608                                  	; old 2 a b value from top of stack
  2609 00000698 DD5B08                  	fstp	qword [ebx+Complex.Imag]
  2610                                  
  2611                                  	ret
  2612                              <1> %ifnctx proc
  2613                              <1>  ret %1
  2614                              <1> %else
  2615 0000069B 89EC                <1>  mov esp, ebp
  2616 0000069D 5D                  <1>  pop ebp
  2617 0000069E C3                  <1>  ret %1
  2618                              <1> %endif
  2619                                  endproc
  2620                              <1> %ifnctx proc
  2621                              <1> %error Mismatched `endproc'/`proc'
  2622                              <1> %else
  2623                              <1> .STACK_FRAME_SIZE equ %$local
  2624                              <1> 
  2625                              <1> 
  2626                              <1> %ifdef LEGACY_ENDPROC
  2627                              <1>  ret
  2628                              <1> %endif
  2629                              <1> 
  2630                              <1> 
  2631                              <1> 
  2632                              <1> 
  2633                              <1> 
  2634                              <1> 
  2635                              <1> 
  2636                              <1> 
  2637                              <1> 
  2638                              <1> %pop
  2639                              <1> %endif
  2640                                  _ComplexSquare_arglen	equ	4
  2641                                  
  2642                                  ;CheckInfinity
  2643                                  ;CheckInfinity(complex *Z) - if |Z| > 2 return 1, else return 0
  2644                                  proc _IsDiverging
  2645                              <1> %ifctx proc
  2646                              <1> %error Mismatched `endproc'/`proc'
  2647                              <1> %else
  2648                              <1> %push proc
  2649                              <1>  global %1
  2650 0000069F 55                  <1> %1: push ebp
  2651 000006A0 89E5                <1>  mov ebp, esp
  2652                              <1> %assign %$arg 8
  2653                              <1> %assign %$local 0
  2654                              <1> 
  2655                              <1> %define %$procname %1
  2656                              <1> %endif
  2657                                  .Z	arg	4
  2658                              <1> .Z equ %$arg
  2659                              <1> 
  2660                              <1> 
  2661                              <1> %assign %$arg %1+%$arg
  2662                                  
  2663                                  	; aa+bb
  2664 000006A2 8B5D08                  	mov	ebx, [ebp+.Z]
  2665 000006A5 DD03                    	fld	qword [ebx+Complex.Real]
  2666 000006A7 D8C8                    	fmul	st0
  2667 000006A9 DD4308                  	fld	qword [ebx+Complex.Imag]
  2668 000006AC D8C8                    	fmul	st0
  2669 000006AE DEC1                    	faddp	st1
  2670                                  
  2671                                  	; subtract 4 from aa+bb
  2672 000006B0 D9E8                    	fld1
  2673 000006B2 D8C0                    	fadd	st0
  2674 000006B4 D8C0                    	fadd	st0
  2675 000006B6 DEE9                    	fsubp	st1	; |z| - 2 now in st0
  2676                                  
  2677                                  	; use stack location as temporary storage.
  2678                                  	; don't try this at home, kids
  2679                                  	;mov	ebx, [ebp+.Z]
  2680                                  	;fstp	dword [ebx+Complex.Real]
  2681 000006B8 D95D08                  	fstp	dword [ebp+.Z]
  2682 000006BB 31C0                    	xor	eax, eax
  2683 000006BD 837D0800                	cmp	dword [ebp+.Z], 0	; sign flag works alike
  2684                                  	;adc	eax, 0			; carry will be set if borrow
  2685 000006C1 7C05                    	jl	.done
  2686 000006C3 B801000000              	mov	eax, 1
  2687                                  .done
  2688                                  	ret				; was necessary, i.e. was < 0
  2689                              <1> %ifnctx proc
  2690                              <1>  ret %1
  2691                              <1> %else
  2692 000006C8 89EC                <1>  mov esp, ebp
  2693 000006CA 5D                  <1>  pop ebp
  2694 000006CB C3                  <1>  ret %1
  2695                              <1> %endif
  2696                                  
  2697                                  endproc
  2698                              <1> %ifnctx proc
  2699                              <1> %error Mismatched `endproc'/`proc'
  2700                              <1> %else
  2701                              <1> .STACK_FRAME_SIZE equ %$local
  2702                              <1> 
  2703                              <1> 
  2704                              <1> %ifdef LEGACY_ENDPROC
  2705                              <1>  ret
  2706                              <1> %endif
  2707                              <1> 
  2708                              <1> 
  2709                              <1> 
  2710                              <1> 
  2711                              <1> 
  2712                              <1> 
  2713                              <1> 
  2714                              <1> 
  2715                              <1> 
  2716                              <1> %pop
  2717                              <1> %endif
  2718                                  _IsDiverging_arglen	equ	4
  2719                                  
  2720                                  ;SetZoom
  2721                                  ;double or halve the dimensions of the window; centered around X,Y
  2722                                  proc _SetZoom
  2723                              <1> %ifctx proc
  2724                              <1> %error Mismatched `endproc'/`proc'
  2725                              <1> %else
  2726                              <1> %push proc
  2727                              <1>  global %1
  2728 000006CC 55                  <1> %1: push ebp
  2729 000006CD 89E5                <1>  mov ebp, esp
  2730                              <1> %assign %$arg 8
  2731                              <1> %assign %$local 0
  2732                              <1> 
  2733                              <1> %define %$procname %1
  2734                              <1> %endif
  2735                                  .width	local	8
  2736                              <1> %if %$local == 0
  2737 000006CF 81C4DCFFFFFF        <1>  add esp, .STACK_FRAME_SIZE
  2738                              <1> %endif
  2739                              <1> %assign %$local %$local-%1
  2740                              <1> .width equ %$local
  2741                                  .height	local	8
  2742                              <1> %if %$local == 0
  2743                              <1>  add esp, .STACK_FRAME_SIZE
  2744                              <1> %endif
  2745                              <1> %assign %$local %$local-%1
  2746                              <1> .height equ %$local
  2747                                  .ctrX	local	8
  2748                              <1> %if %$local == 0
  2749                              <1>  add esp, .STACK_FRAME_SIZE
  2750                              <1> %endif
  2751                              <1> %assign %$local %$local-%1
  2752                              <1> .ctrX equ %$local
  2753                                  .ctrY	local	8
  2754                              <1> %if %$local == 0
  2755                              <1>  add esp, .STACK_FRAME_SIZE
  2756                              <1> %endif
  2757                              <1> %assign %$local %$local-%1
  2758                              <1> .ctrY equ %$local
  2759                                  .tmp	local	4
  2760                              <1> %if %$local == 0
  2761                              <1>  add esp, .STACK_FRAME_SIZE
  2762                              <1> %endif
  2763                              <1> %assign %$local %$local-%1
  2764                              <1> .tmp equ %$local
  2765                                  	
  2766                                  	; find width, height, (new)center (x,y)
  2767 000006D5 DD05[0C000000]          	fld	qword [_MaxX]
  2768 000006DB DC25[04000000]          	fsub	qword [_MinX]
  2769 000006E1 DD55F8                  	fst	qword [ebp+.width]	; leave width for later
  2770                                  
  2771 000006E4 DF05[24000000]          	fild	word [_MouseX]
  2772 000006EA C745DC80020000          	mov	dword [ebp+.tmp], 640
  2773 000006F1 DB45DC                  	fild	dword [ebp+.tmp]
  2774 000006F4 DEF9                    	fdivp	st1
  2775 000006F6 D8C9                    	fmul	st1			; width
  2776 000006F8 DC05[04000000]          	fadd	qword [_MinX]
  2777 000006FE DD5DE8                  	fstp	qword [ebp+.ctrX]
  2778                                  
  2779 00000701 DD05[1C000000]          	fld	qword [_MaxY]
  2780 00000707 DC25[14000000]          	fsub	qword [_MinY]
  2781 0000070D DD55F0                  	fst	qword [ebp+.height]	; leave height for later
  2782                                  
  2783 00000710 DF05[26000000]          	fild	word [_MouseY]
  2784 00000716 C745DCE0010000          	mov	dword [ebp+.tmp], 480
  2785 0000071D DB45DC                  	fild	dword [ebp+.tmp]
  2786 00000720 DEF9                    	fdivp	st1
  2787 00000722 D8C9                    	fmul	st1			; height
  2788 00000724 DC05[14000000]          	fadd	qword [_MinY]
  2789 0000072A DD5DE0                  	fstp	qword [ebp+.ctrY]
  2790                                  
  2791                                  	; if zoom out, width,height is what we add/sub
  2792 0000072D F605[13000000]04        	test	byte[_MPFlags], ZOOM_OUT_BIT
  2793 00000734 741C                    	je	.zoom
  2794                                  
  2795                                  	; else we need to add width,height /4
  2796 00000736 DD45F8                  	fld	qword [ebp+.width]
  2797 00000739 D9E8                    	fld1
  2798 0000073B D8C0                    	fadd	st0
  2799 0000073D D8C0                    	fadd	st0
  2800 0000073F DEF9                    	fdivp	st1
  2801 00000741 DD5DF8                  	fstp	qword [ebp+.width]
  2802                                  
  2803 00000744 DD45F0                  	fld	qword [ebp+.height]
  2804 00000747 D9E8                    	fld1
  2805 00000749 D8C0                    	fadd	st0
  2806 0000074B D8C0                    	fadd	st0
  2807 0000074D DEF9                    	fdivp	st1		;hmm verify this later
  2808                                  				;-----------------------------------------
  2809 0000074F DD5DF0                  	fstp	qword [ebp+.height]
  2810                                  
  2811                                  .zoom
  2812                                  	; add and subtract width, height from ctrX,ctrY for Max/Min X,Y
  2813 00000752 DD45E8                  	fld	qword [ebp+.ctrX]
  2814 00000755 DD45F8                  	fld	qword [ebp+.width]
  2815 00000758 D8C1                    	fadd	st1		; save ctrX
  2816 0000075A DD1D[0C000000]          	fstp	qword [_MaxX]
  2817 00000760 DD45F8                  	fld	qword [ebp+.width]
  2818 00000763 DEE9                    	fsubp	st1
  2819 00000765 DD1D[04000000]          	fstp	qword [_MinX]
  2820                                  
  2821 0000076B DD45E0                  	fld	qword [ebp+.ctrY]
  2822 0000076E DD45F0                  	fld	qword [ebp+.height]
  2823 00000771 D8C1                    	fadd	st1		; save ctrY
  2824 00000773 DD1D[1C000000]          	fstp	qword [_MaxY]
  2825 00000779 DD45F0                  	fld	qword [ebp+.height]
  2826 0000077C DEE9                    	fsubp	st1
  2827 0000077E DD1D[14000000]          	fstp	qword [_MinY]
  2828                                  
  2829                                  	; clear zoom bits so a new one can be stored
  2830                                  	;and	byte [_MPFlags], ~ZOOM_BITS
  2831                                  
  2832                                  	ret
  2833                              <1> %ifnctx proc
  2834                              <1>  ret %1
  2835                              <1> %else
  2836 00000784 89EC                <1>  mov esp, ebp
  2837 00000786 5D                  <1>  pop ebp
  2838 00000787 C3                  <1>  ret %1
  2839                              <1> %endif
  2840                                  endproc
  2841                              <1> %ifnctx proc
  2842                              <1> %error Mismatched `endproc'/`proc'
  2843                              <1> %else
  2844                              <1> .STACK_FRAME_SIZE equ %$local
  2845                              <1> 
  2846                              <1> 
  2847                              <1> %ifdef LEGACY_ENDPROC
  2848                              <1>  ret
  2849                              <1> %endif
  2850                              <1> 
  2851                              <1> 
  2852                              <1> 
  2853                              <1> 
  2854                              <1> 
  2855                              <1> 
  2856                              <1> 
  2857                              <1> 
  2858                              <1> 
  2859                              <1> %pop
  2860                              <1> %endif
  2861                                  
  2862                                  ;--------------------------------------------------------------
  2863                                  ;--                    InstallKeyboard()                     --
  2864                                  ;--------------------------------------------------------------
  2865                                  _InstallKeyboard
  2866                                  
  2867                                  ;	call	_libInstallKeyboard
  2868                                          invoke  _LockArea, ds, dword _kbPort, dword 2
  2869                              <1> %rotate -1
  2870                              <1> 
  2871                              <1> %rep (%0-1)
  2872                              <1> 
  2873                              <1> 
  2874                              <1> 
  2875                              <1> 
  2876                              <1> 
  2877                              <1> 
  2878                              <1> 
  2879                              <1>  %ifidni %1, cs
  2880                              <1>  o16 push %1
  2881                              <1>  %elifidni %1, ds
  2882                              <1>  o16 push %1
  2883                              <1>  %elifidni %1, es
  2884                              <1>  o16 push %1
  2885                              <1>  %elifidni %1, fs
  2886                              <1>  o16 push %1
  2887                              <1>  %elifidni %1, gs
  2888                              <1>  o16 push %1
  2889                              <1>  %elifidni %1, word cs
  2890                              <1>  o16 push %1
  2891                              <1>  %elifidni %1, word ds
  2892                              <1>  o16 push %1
  2893                              <1>  %elifidni %1, word es
  2894                              <1>  o16 push %1
  2895                              <1>  %elifidni %1, word fs
  2896                              <1>  o16 push %1
  2897                              <1>  %elifidni %1, word gs
  2898                              <1>  o16 push %1
  2899                              <1>  %else
  2900                              <1>  push %1
  2901                              <1>  %endif
  2902                              <1> 
  2903                              <1>  %rotate -1
  2904                              <1> %endrep
  2905                              <2> 
  2906                              <2> 
  2907                              <2> 
  2908                              <2> 
  2909                              <2> 
  2910                              <2> 
  2911                              <2> 
  2912                              <2>  %ifidni %1, cs
  2913                              <2>  o16 push %1
  2914                              <2>  %elifidni %1, ds
  2915                              <2>  o16 push %1
  2916                              <2>  %elifidni %1, es
  2917                              <2>  o16 push %1
  2918                              <2>  %elifidni %1, fs
  2919                              <2>  o16 push %1
  2920                              <2>  %elifidni %1, gs
  2921                              <2>  o16 push %1
  2922                              <2>  %elifidni %1, word cs
  2923                              <2>  o16 push %1
  2924                              <2>  %elifidni %1, word ds
  2925                              <2>  o16 push %1
  2926                              <2>  %elifidni %1, word es
  2927                              <2>  o16 push %1
  2928                              <2>  %elifidni %1, word fs
  2929                              <2>  o16 push %1
  2930                              <2>  %elifidni %1, word gs
  2931                              <2>  o16 push %1
  2932                              <2>  %else
  2933 00000788 6802000000          <2>  push %1
  2934                              <2>  %endif
  2935                              <2> 
  2936                              <2>  %rotate -1
  2937                              <2> 
  2938                              <2> 
  2939                              <2> 
  2940                              <2> 
  2941                              <2> 
  2942                              <2> 
  2943                              <2> 
  2944                              <2>  %ifidni %1, cs
  2945                              <2>  o16 push %1
  2946                              <2>  %elifidni %1, ds
  2947                              <2>  o16 push %1
  2948                              <2>  %elifidni %1, es
  2949                              <2>  o16 push %1
  2950                              <2>  %elifidni %1, fs
  2951                              <2>  o16 push %1
  2952                              <2>  %elifidni %1, gs
  2953                              <2>  o16 push %1
  2954                              <2>  %elifidni %1, word cs
  2955                              <2>  o16 push %1
  2956                              <2>  %elifidni %1, word ds
  2957                              <2>  o16 push %1
  2958                              <2>  %elifidni %1, word es
  2959                              <2>  o16 push %1
  2960                              <2>  %elifidni %1, word fs
  2961                              <2>  o16 push %1
  2962                              <2>  %elifidni %1, word gs
  2963                              <2>  o16 push %1
  2964                              <2>  %else
  2965 0000078D 68[0C000000]        <2>  push %1
  2966                              <2>  %endif
  2967                              <2> 
  2968                              <2>  %rotate -1
  2969                              <2> 
  2970                              <2> 
  2971                              <2> 
  2972                              <2> 
  2973                              <2> 
  2974                              <2> 
  2975                              <2> 
  2976                              <2>  %ifidni %1, cs
  2977                              <2>  o16 push %1
  2978                              <2>  %elifidni %1, ds
  2979 00000792 661E                <2>  o16 push %1
  2980                              <2>  %elifidni %1, es
  2981                              <2>  o16 push %1
  2982                              <2>  %elifidni %1, fs
  2983                              <2>  o16 push %1
  2984                              <2>  %elifidni %1, gs
  2985                              <2>  o16 push %1
  2986                              <2>  %elifidni %1, word cs
  2987                              <2>  o16 push %1
  2988                              <2>  %elifidni %1, word ds
  2989                              <2>  o16 push %1
  2990                              <2>  %elifidni %1, word es
  2991                              <2>  o16 push %1
  2992                              <2>  %elifidni %1, word fs
  2993                              <2>  o16 push %1
  2994                              <2>  %elifidni %1, word gs
  2995                              <2>  o16 push %1
  2996                              <2>  %else
  2997                              <2>  push %1
  2998                              <2>  %endif
  2999                              <2> 
  3000                              <2>  %rotate -1
  3001 00000794 E8(00000000)        <1> call %1
  3002                              <1> %if (%0!=1)
  3003 00000799 83C40A              <1>  add esp, byte %1_arglen
  3004                              <1> %endif
  3005                                          invoke  _LockArea, ds, dword _kbIRQ, dword 1
  3006                              <1> %rotate -1
  3007                              <1> 
  3008                              <1> %rep (%0-1)
  3009                              <1> 
  3010                              <1> 
  3011                              <1> 
  3012                              <1> 
  3013                              <1> 
  3014                              <1> 
  3015                              <1> 
  3016                              <1>  %ifidni %1, cs
  3017                              <1>  o16 push %1
  3018                              <1>  %elifidni %1, ds
  3019                              <1>  o16 push %1
  3020                              <1>  %elifidni %1, es
  3021                              <1>  o16 push %1
  3022                              <1>  %elifidni %1, fs
  3023                              <1>  o16 push %1
  3024                              <1>  %elifidni %1, gs
  3025                              <1>  o16 push %1
  3026                              <1>  %elifidni %1, word cs
  3027                              <1>  o16 push %1
  3028                              <1>  %elifidni %1, word ds
  3029                              <1>  o16 push %1
  3030                              <1>  %elifidni %1, word es
  3031                              <1>  o16 push %1
  3032                              <1>  %elifidni %1, word fs
  3033                              <1>  o16 push %1
  3034                              <1>  %elifidni %1, word gs
  3035                              <1>  o16 push %1
  3036                              <1>  %else
  3037                              <1>  push %1
  3038                              <1>  %endif
  3039                              <1> 
  3040                              <1>  %rotate -1
  3041                              <1> %endrep
  3042                              <2> 
  3043                              <2> 
  3044                              <2> 
  3045                              <2> 
  3046                              <2> 
  3047                              <2> 
  3048                              <2> 
  3049                              <2>  %ifidni %1, cs
  3050                              <2>  o16 push %1
  3051                              <2>  %elifidni %1, ds
  3052                              <2>  o16 push %1
  3053                              <2>  %elifidni %1, es
  3054                              <2>  o16 push %1
  3055                              <2>  %elifidni %1, fs
  3056                              <2>  o16 push %1
  3057                              <2>  %elifidni %1, gs
  3058                              <2>  o16 push %1
  3059                              <2>  %elifidni %1, word cs
  3060                              <2>  o16 push %1
  3061                              <2>  %elifidni %1, word ds
  3062                              <2>  o16 push %1
  3063                              <2>  %elifidni %1, word es
  3064                              <2>  o16 push %1
  3065                              <2>  %elifidni %1, word fs
  3066                              <2>  o16 push %1
  3067                              <2>  %elifidni %1, word gs
  3068                              <2>  o16 push %1
  3069                              <2>  %else
  3070 0000079C 6801000000          <2>  push %1
  3071                              <2>  %endif
  3072                              <2> 
  3073                              <2>  %rotate -1
  3074                              <2> 
  3075                              <2> 
  3076                              <2> 
  3077                              <2> 
  3078                              <2> 
  3079                              <2> 
  3080                              <2> 
  3081                              <2>  %ifidni %1, cs
  3082                              <2>  o16 push %1
  3083                              <2>  %elifidni %1, ds
  3084                              <2>  o16 push %1
  3085                              <2>  %elifidni %1, es
  3086                              <2>  o16 push %1
  3087                              <2>  %elifidni %1, fs
  3088                              <2>  o16 push %1
  3089                              <2>  %elifidni %1, gs
  3090                              <2>  o16 push %1
  3091                              <2>  %elifidni %1, word cs
  3092                              <2>  o16 push %1
  3093                              <2>  %elifidni %1, word ds
  3094                              <2>  o16 push %1
  3095                              <2>  %elifidni %1, word es
  3096                              <2>  o16 push %1
  3097                              <2>  %elifidni %1, word fs
  3098                              <2>  o16 push %1
  3099                              <2>  %elifidni %1, word gs
  3100                              <2>  o16 push %1
  3101                              <2>  %else
  3102 000007A1 68[0B000000]        <2>  push %1
  3103                              <2>  %endif
  3104                              <2> 
  3105                              <2>  %rotate -1
  3106                              <2> 
  3107                              <2> 
  3108                              <2> 
  3109                              <2> 
  3110                              <2> 
  3111                              <2> 
  3112                              <2> 
  3113                              <2>  %ifidni %1, cs
  3114                              <2>  o16 push %1
  3115                              <2>  %elifidni %1, ds
  3116 000007A6 661E                <2>  o16 push %1
  3117                              <2>  %elifidni %1, es
  3118                              <2>  o16 push %1
  3119                              <2>  %elifidni %1, fs
  3120                              <2>  o16 push %1
  3121                              <2>  %elifidni %1, gs
  3122                              <2>  o16 push %1
  3123                              <2>  %elifidni %1, word cs
  3124                              <2>  o16 push %1
  3125                              <2>  %elifidni %1, word ds
  3126                              <2>  o16 push %1
  3127                              <2>  %elifidni %1, word es
  3128                              <2>  o16 push %1
  3129                              <2>  %elifidni %1, word fs
  3130                              <2>  o16 push %1
  3131                              <2>  %elifidni %1, word gs
  3132                              <2>  o16 push %1
  3133                              <2>  %else
  3134                              <2>  push %1
  3135                              <2>  %endif
  3136                              <2> 
  3137                              <2>  %rotate -1
  3138 000007A8 E8(00000000)        <1> call %1
  3139                              <1> %if (%0!=1)
  3140 000007AD 83C40A              <1>  add esp, byte %1_arglen
  3141                              <1> %endif
  3142                                          invoke  _LockArea, ds, dword _MPFlags, dword 1
  3143                              <1> %rotate -1
  3144                              <1> 
  3145                              <1> %rep (%0-1)
  3146                              <1> 
  3147                              <1> 
  3148                              <1> 
  3149                              <1> 
  3150                              <1> 
  3151                              <1> 
  3152                              <1> 
  3153                              <1>  %ifidni %1, cs
  3154                              <1>  o16 push %1
  3155                              <1>  %elifidni %1, ds
  3156                              <1>  o16 push %1
  3157                              <1>  %elifidni %1, es
  3158                              <1>  o16 push %1
  3159                              <1>  %elifidni %1, fs
  3160                              <1>  o16 push %1
  3161                              <1>  %elifidni %1, gs
  3162                              <1>  o16 push %1
  3163                              <1>  %elifidni %1, word cs
  3164                              <1>  o16 push %1
  3165                              <1>  %elifidni %1, word ds
  3166                              <1>  o16 push %1
  3167                              <1>  %elifidni %1, word es
  3168                              <1>  o16 push %1
  3169                              <1>  %elifidni %1, word fs
  3170                              <1>  o16 push %1
  3171                              <1>  %elifidni %1, word gs
  3172                              <1>  o16 push %1
  3173                              <1>  %else
  3174                              <1>  push %1
  3175                              <1>  %endif
  3176                              <1> 
  3177                              <1>  %rotate -1
  3178                              <1> %endrep
  3179                              <2> 
  3180                              <2> 
  3181                              <2> 
  3182                              <2> 
  3183                              <2> 
  3184                              <2> 
  3185                              <2> 
  3186                              <2>  %ifidni %1, cs
  3187                              <2>  o16 push %1
  3188                              <2>  %elifidni %1, ds
  3189                              <2>  o16 push %1
  3190                              <2>  %elifidni %1, es
  3191                              <2>  o16 push %1
  3192                              <2>  %elifidni %1, fs
  3193                              <2>  o16 push %1
  3194                              <2>  %elifidni %1, gs
  3195                              <2>  o16 push %1
  3196                              <2>  %elifidni %1, word cs
  3197                              <2>  o16 push %1
  3198                              <2>  %elifidni %1, word ds
  3199                              <2>  o16 push %1
  3200                              <2>  %elifidni %1, word es
  3201                              <2>  o16 push %1
  3202                              <2>  %elifidni %1, word fs
  3203                              <2>  o16 push %1
  3204                              <2>  %elifidni %1, word gs
  3205                              <2>  o16 push %1
  3206                              <2>  %else
  3207 000007B0 6801000000          <2>  push %1
  3208                              <2>  %endif
  3209                              <2> 
  3210                              <2>  %rotate -1
  3211                              <2> 
  3212                              <2> 
  3213                              <2> 
  3214                              <2> 
  3215                              <2> 
  3216                              <2> 
  3217                              <2> 
  3218                              <2>  %ifidni %1, cs
  3219                              <2>  o16 push %1
  3220                              <2>  %elifidni %1, ds
  3221                              <2>  o16 push %1
  3222                              <2>  %elifidni %1, es
  3223                              <2>  o16 push %1
  3224                              <2>  %elifidni %1, fs
  3225                              <2>  o16 push %1
  3226                              <2>  %elifidni %1, gs
  3227                              <2>  o16 push %1
  3228                              <2>  %elifidni %1, word cs
  3229                              <2>  o16 push %1
  3230                              <2>  %elifidni %1, word ds
  3231                              <2>  o16 push %1
  3232                              <2>  %elifidni %1, word es
  3233                              <2>  o16 push %1
  3234                              <2>  %elifidni %1, word fs
  3235                              <2>  o16 push %1
  3236                              <2>  %elifidni %1, word gs
  3237                              <2>  o16 push %1
  3238                              <2>  %else
  3239 000007B5 68[13000000]        <2>  push %1
  3240                              <2>  %endif
  3241                              <2> 
  3242                              <2>  %rotate -1
  3243                              <2> 
  3244                              <2> 
  3245                              <2> 
  3246                              <2> 
  3247                              <2> 
  3248                              <2> 
  3249                              <2> 
  3250                              <2>  %ifidni %1, cs
  3251                              <2>  o16 push %1
  3252                              <2>  %elifidni %1, ds
  3253 000007BA 661E                <2>  o16 push %1
  3254                              <2>  %elifidni %1, es
  3255                              <2>  o16 push %1
  3256                              <2>  %elifidni %1, fs
  3257                              <2>  o16 push %1
  3258                              <2>  %elifidni %1, gs
  3259                              <2>  o16 push %1
  3260                              <2>  %elifidni %1, word cs
  3261                              <2>  o16 push %1
  3262                              <2>  %elifidni %1, word ds
  3263                              <2>  o16 push %1
  3264                              <2>  %elifidni %1, word es
  3265                              <2>  o16 push %1
  3266                              <2>  %elifidni %1, word fs
  3267                              <2>  o16 push %1
  3268                              <2>  %elifidni %1, word gs
  3269                              <2>  o16 push %1
  3270                              <2>  %else
  3271                              <2>  push %1
  3272                              <2>  %endif
  3273                              <2> 
  3274                              <2>  %rotate -1
  3275 000007BC E8(00000000)        <1> call %1
  3276                              <1> %if (%0!=1)
  3277 000007C1 83C40A              <1>  add esp, byte %1_arglen
  3278                              <1> %endif
  3279                                          invoke  _LockArea, cs, dword _KeyboardISR, dword _KeyboardISR_end-_KeyboardISR
  3280                              <1> %rotate -1
  3281                              <1> 
  3282                              <1> %rep (%0-1)
  3283                              <1> 
  3284                              <1> 
  3285                              <1> 
  3286                              <1> 
  3287                              <1> 
  3288                              <1> 
  3289                              <1> 
  3290                              <1>  %ifidni %1, cs
  3291                              <1>  o16 push %1
  3292                              <1>  %elifidni %1, ds
  3293                              <1>  o16 push %1
  3294                              <1>  %elifidni %1, es
  3295                              <1>  o16 push %1
  3296                              <1>  %elifidni %1, fs
  3297                              <1>  o16 push %1
  3298                              <1>  %elifidni %1, gs
  3299                              <1>  o16 push %1
  3300                              <1>  %elifidni %1, word cs
  3301                              <1>  o16 push %1
  3302                              <1>  %elifidni %1, word ds
  3303                              <1>  o16 push %1
  3304                              <1>  %elifidni %1, word es
  3305                              <1>  o16 push %1
  3306                              <1>  %elifidni %1, word fs
  3307                              <1>  o16 push %1
  3308                              <1>  %elifidni %1, word gs
  3309                              <1>  o16 push %1
  3310                              <1>  %else
  3311                              <1>  push %1
  3312                              <1>  %endif
  3313                              <1> 
  3314                              <1>  %rotate -1
  3315                              <1> %endrep
  3316                              <2> 
  3317                              <2> 
  3318                              <2> 
  3319                              <2> 
  3320                              <2> 
  3321                              <2> 
  3322                              <2> 
  3323                              <2>  %ifidni %1, cs
  3324                              <2>  o16 push %1
  3325                              <2>  %elifidni %1, ds
  3326                              <2>  o16 push %1
  3327                              <2>  %elifidni %1, es
  3328                              <2>  o16 push %1
  3329                              <2>  %elifidni %1, fs
  3330                              <2>  o16 push %1
  3331                              <2>  %elifidni %1, gs
  3332                              <2>  o16 push %1
  3333                              <2>  %elifidni %1, word cs
  3334                              <2>  o16 push %1
  3335                              <2>  %elifidni %1, word ds
  3336                              <2>  o16 push %1
  3337                              <2>  %elifidni %1, word es
  3338                              <2>  o16 push %1
  3339                              <2>  %elifidni %1, word fs
  3340                              <2>  o16 push %1
  3341                              <2>  %elifidni %1, word gs
  3342                              <2>  o16 push %1
  3343                              <2>  %else
  3344 000007C4 6808000000          <2>  push %1
  3345                              <2>  %endif
  3346                              <2> 
  3347                              <2>  %rotate -1
  3348                              <2> 
  3349                              <2> 
  3350                              <2> 
  3351                              <2> 
  3352                              <2> 
  3353                              <2> 
  3354                              <2> 
  3355                              <2>  %ifidni %1, cs
  3356                              <2>  o16 push %1
  3357                              <2>  %elifidni %1, ds
  3358                              <2>  o16 push %1
  3359                              <2>  %elifidni %1, es
  3360                              <2>  o16 push %1
  3361                              <2>  %elifidni %1, fs
  3362                              <2>  o16 push %1
  3363                              <2>  %elifidni %1, gs
  3364                              <2>  o16 push %1
  3365                              <2>  %elifidni %1, word cs
  3366                              <2>  o16 push %1
  3367                              <2>  %elifidni %1, word ds
  3368                              <2>  o16 push %1
  3369                              <2>  %elifidni %1, word es
  3370                              <2>  o16 push %1
  3371                              <2>  %elifidni %1, word fs
  3372                              <2>  o16 push %1
  3373                              <2>  %elifidni %1, word gs
  3374                              <2>  o16 push %1
  3375                              <2>  %else
  3376 000007C9 68[FF070000]        <2>  push %1
  3377                              <2>  %endif
  3378                              <2> 
  3379                              <2>  %rotate -1
  3380                              <2> 
  3381                              <2> 
  3382                              <2> 
  3383                              <2> 
  3384                              <2> 
  3385                              <2> 
  3386                              <2> 
  3387                              <2>  %ifidni %1, cs
  3388 000007CE 660E                <2>  o16 push %1
  3389                              <2>  %elifidni %1, ds
  3390                              <2>  o16 push %1
  3391                              <2>  %elifidni %1, es
  3392                              <2>  o16 push %1
  3393                              <2>  %elifidni %1, fs
  3394                              <2>  o16 push %1
  3395                              <2>  %elifidni %1, gs
  3396                              <2>  o16 push %1
  3397                              <2>  %elifidni %1, word cs
  3398                              <2>  o16 push %1
  3399                              <2>  %elifidni %1, word ds
  3400                              <2>  o16 push %1
  3401                              <2>  %elifidni %1, word es
  3402                              <2>  o16 push %1
  3403                              <2>  %elifidni %1, word fs
  3404                              <2>  o16 push %1
  3405                              <2>  %elifidni %1, word gs
  3406                              <2>  o16 push %1
  3407                              <2>  %else
  3408                              <2>  push %1
  3409                              <2>  %endif
  3410                              <2> 
  3411                              <2>  %rotate -1
  3412 000007D0 E8(00000000)        <1> call %1
  3413                              <1> %if (%0!=1)
  3414 000007D5 83C40A              <1>  add esp, byte %1_arglen
  3415                              <1> %endif
  3416 000007D8 0FB605[0A000000]        	movzx	eax, byte [_kbINT]
  3417                                  	invoke	_Install_Int, eax, dword _KeyboardISR
  3418                              <1> %rotate -1
  3419                              <1> 
  3420                              <1> %rep (%0-1)
  3421                              <1> 
  3422                              <1> 
  3423                              <1> 
  3424                              <1> 
  3425                              <1> 
  3426                              <1> 
  3427                              <1> 
  3428                              <1>  %ifidni %1, cs
  3429                              <1>  o16 push %1
  3430                              <1>  %elifidni %1, ds
  3431                              <1>  o16 push %1
  3432                              <1>  %elifidni %1, es
  3433                              <1>  o16 push %1
  3434                              <1>  %elifidni %1, fs
  3435                              <1>  o16 push %1
  3436                              <1>  %elifidni %1, gs
  3437                              <1>  o16 push %1
  3438                              <1>  %elifidni %1, word cs
  3439                              <1>  o16 push %1
  3440                              <1>  %elifidni %1, word ds
  3441                              <1>  o16 push %1
  3442                              <1>  %elifidni %1, word es
  3443                              <1>  o16 push %1
  3444                              <1>  %elifidni %1, word fs
  3445                              <1>  o16 push %1
  3446                              <1>  %elifidni %1, word gs
  3447                              <1>  o16 push %1
  3448                              <1>  %else
  3449                              <1>  push %1
  3450                              <1>  %endif
  3451                              <1> 
  3452                              <1>  %rotate -1
  3453                              <1> %endrep
  3454                              <2> 
  3455                              <2> 
  3456                              <2> 
  3457                              <2> 
  3458                              <2> 
  3459                              <2> 
  3460                              <2> 
  3461                              <2>  %ifidni %1, cs
  3462                              <2>  o16 push %1
  3463                              <2>  %elifidni %1, ds
  3464                              <2>  o16 push %1
  3465                              <2>  %elifidni %1, es
  3466                              <2>  o16 push %1
  3467                              <2>  %elifidni %1, fs
  3468                              <2>  o16 push %1
  3469                              <2>  %elifidni %1, gs
  3470                              <2>  o16 push %1
  3471                              <2>  %elifidni %1, word cs
  3472                              <2>  o16 push %1
  3473                              <2>  %elifidni %1, word ds
  3474                              <2>  o16 push %1
  3475                              <2>  %elifidni %1, word es
  3476                              <2>  o16 push %1
  3477                              <2>  %elifidni %1, word fs
  3478                              <2>  o16 push %1
  3479                              <2>  %elifidni %1, word gs
  3480                              <2>  o16 push %1
  3481                              <2>  %else
  3482 000007DF 68[FF070000]        <2>  push %1
  3483                              <2>  %endif
  3484                              <2> 
  3485                              <2>  %rotate -1
  3486                              <2> 
  3487                              <2> 
  3488                              <2> 
  3489                              <2> 
  3490                              <2> 
  3491                              <2> 
  3492                              <2> 
  3493                              <2>  %ifidni %1, cs
  3494                              <2>  o16 push %1
  3495                              <2>  %elifidni %1, ds
  3496                              <2>  o16 push %1
  3497                              <2>  %elifidni %1, es
  3498                              <2>  o16 push %1
  3499                              <2>  %elifidni %1, fs
  3500                              <2>  o16 push %1
  3501                              <2>  %elifidni %1, gs
  3502                              <2>  o16 push %1
  3503                              <2>  %elifidni %1, word cs
  3504                              <2>  o16 push %1
  3505                              <2>  %elifidni %1, word ds
  3506                              <2>  o16 push %1
  3507                              <2>  %elifidni %1, word es
  3508                              <2>  o16 push %1
  3509                              <2>  %elifidni %1, word fs
  3510                              <2>  o16 push %1
  3511                              <2>  %elifidni %1, word gs
  3512                              <2>  o16 push %1
  3513                              <2>  %else
  3514 000007E4 50                  <2>  push %1
  3515                              <2>  %endif
  3516                              <2> 
  3517                              <2>  %rotate -1
  3518 000007E5 E8(00000000)        <1> call %1
  3519                              <1> %if (%0!=1)
  3520 000007EA 83C408              <1>  add esp, byte %1_arglen
  3521                              <1> %endif
  3522                                  	ret
  3523                              <1> %ifnctx proc
  3524 000007ED C3                  <1>  ret %1
  3525                              <1> %else
  3526                              <1>  mov esp, ebp
  3527                              <1>  pop ebp
  3528                              <1>  ret %1
  3529                              <1> %endif
  3530                                  
  3531                                  ;--------------------------------------------------------------
  3532                                  ;--                     RemoveKeyboard()                     --
  3533                                  ;--------------------------------------------------------------
  3534                                  _RemoveKeyboard
  3535                                  
  3536                                  	;call	_libRemoveKeyboard
  3537 000007EE 0FB605[0A000000]        	movzx	eax, byte [_kbINT]
  3538                                  	invoke	_Remove_Int, eax
  3539                              <1> %rotate -1
  3540                              <1> 
  3541                              <1> %rep (%0-1)
  3542                              <1> 
  3543                              <1> 
  3544                              <1> 
  3545                              <1> 
  3546                              <1> 
  3547                              <1> 
  3548                              <1> 
  3549                              <1>  %ifidni %1, cs
  3550                              <1>  o16 push %1
  3551                              <1>  %elifidni %1, ds
  3552                              <1>  o16 push %1
  3553                              <1>  %elifidni %1, es
  3554                              <1>  o16 push %1
  3555                              <1>  %elifidni %1, fs
  3556                              <1>  o16 push %1
  3557                              <1>  %elifidni %1, gs
  3558                              <1>  o16 push %1
  3559                              <1>  %elifidni %1, word cs
  3560                              <1>  o16 push %1
  3561                              <1>  %elifidni %1, word ds
  3562                              <1>  o16 push %1
  3563                              <1>  %elifidni %1, word es
  3564                              <1>  o16 push %1
  3565                              <1>  %elifidni %1, word fs
  3566                              <1>  o16 push %1
  3567                              <1>  %elifidni %1, word gs
  3568                              <1>  o16 push %1
  3569                              <1>  %else
  3570                              <1>  push %1
  3571                              <1>  %endif
  3572                              <1> 
  3573                              <1>  %rotate -1
  3574                              <1> %endrep
  3575                              <2> 
  3576                              <2> 
  3577                              <2> 
  3578                              <2> 
  3579                              <2> 
  3580                              <2> 
  3581                              <2> 
  3582                              <2>  %ifidni %1, cs
  3583                              <2>  o16 push %1
  3584                              <2>  %elifidni %1, ds
  3585                              <2>  o16 push %1
  3586                              <2>  %elifidni %1, es
  3587                              <2>  o16 push %1
  3588                              <2>  %elifidni %1, fs
  3589                              <2>  o16 push %1
  3590                              <2>  %elifidni %1, gs
  3591                              <2>  o16 push %1
  3592                              <2>  %elifidni %1, word cs
  3593                              <2>  o16 push %1
  3594                              <2>  %elifidni %1, word ds
  3595                              <2>  o16 push %1
  3596                              <2>  %elifidni %1, word es
  3597                              <2>  o16 push %1
  3598                              <2>  %elifidni %1, word fs
  3599                              <2>  o16 push %1
  3600                              <2>  %elifidni %1, word gs
  3601                              <2>  o16 push %1
  3602                              <2>  %else
  3603 000007F5 50                  <2>  push %1
  3604                              <2>  %endif
  3605                              <2> 
  3606                              <2>  %rotate -1
  3607 000007F6 E8(00000000)        <1> call %1
  3608                              <1> %if (%0!=1)
  3609 000007FB 83C404              <1>  add esp, byte %1_arglen
  3610                              <1> %endif
  3611                                  	ret
  3612                              <1> %ifnctx proc
  3613 000007FE C3                  <1>  ret %1
  3614                              <1> %else
  3615                              <1>  mov esp, ebp
  3616                              <1>  pop ebp
  3617                              <1>  ret %1
  3618                              <1> %endif
  3619                                  
  3620                                  ;--------------------------------------------------------------
  3621                                  ;--                      KeyboardISR()                       --
  3622                                  ;--------------------------------------------------------------
  3623                                  _KeyboardISR
  3624                                  
  3625 000007FF 800D[13000000]01        	or byte[_MPFlags], QUIT_BIT
  3626                                  ;	call	_libKeyboardISR
  3627                                  	ret
  3628                              <1> %ifnctx proc
  3629 00000806 C3                  <1>  ret %1
  3630                              <1> %else
  3631                              <1>  mov esp, ebp
  3632                              <1>  pop ebp
  3633                              <1>  ret %1
  3634                              <1> %endif
  3635                                  
  3636                                  _KeyboardISR_end
  3637                                  
  3638                                  
  3639                                  
  3640                                  
  3641                                  
  3642                                  ;--------------------------------------------------------------
  3643                                  ;--                      InstallMouse()                      --
  3644                                  ;--------------------------------------------------------------
  3645                                  _InstallMouse
  3646                                  
  3647                                  	invoke  _LockArea, ds, dword _MPFlags, dword 1
  3648                              <1> %rotate -1
  3649                              <1> 
  3650                              <1> %rep (%0-1)
  3651                              <1> 
  3652                              <1> 
  3653                              <1> 
  3654                              <1> 
  3655                              <1> 
  3656                              <1> 
  3657                              <1> 
  3658                              <1>  %ifidni %1, cs
  3659                              <1>  o16 push %1
  3660                              <1>  %elifidni %1, ds
  3661                              <1>  o16 push %1
  3662                              <1>  %elifidni %1, es
  3663                              <1>  o16 push %1
  3664                              <1>  %elifidni %1, fs
  3665                              <1>  o16 push %1
  3666                              <1>  %elifidni %1, gs
  3667                              <1>  o16 push %1
  3668                              <1>  %elifidni %1, word cs
  3669                              <1>  o16 push %1
  3670                              <1>  %elifidni %1, word ds
  3671                              <1>  o16 push %1
  3672                              <1>  %elifidni %1, word es
  3673                              <1>  o16 push %1
  3674                              <1>  %elifidni %1, word fs
  3675                              <1>  o16 push %1
  3676                              <1>  %elifidni %1, word gs
  3677                              <1>  o16 push %1
  3678                              <1>  %else
  3679                              <1>  push %1
  3680                              <1>  %endif
  3681                              <1> 
  3682                              <1>  %rotate -1
  3683                              <1> %endrep
  3684                              <2> 
  3685                              <2> 
  3686                              <2> 
  3687                              <2> 
  3688                              <2> 
  3689                              <2> 
  3690                              <2> 
  3691                              <2>  %ifidni %1, cs
  3692                              <2>  o16 push %1
  3693                              <2>  %elifidni %1, ds
  3694                              <2>  o16 push %1
  3695                              <2>  %elifidni %1, es
  3696                              <2>  o16 push %1
  3697                              <2>  %elifidni %1, fs
  3698                              <2>  o16 push %1
  3699                              <2>  %elifidni %1, gs
  3700                              <2>  o16 push %1
  3701                              <2>  %elifidni %1, word cs
  3702                              <2>  o16 push %1
  3703                              <2>  %elifidni %1, word ds
  3704                              <2>  o16 push %1
  3705                              <2>  %elifidni %1, word es
  3706                              <2>  o16 push %1
  3707                              <2>  %elifidni %1, word fs
  3708                              <2>  o16 push %1
  3709                              <2>  %elifidni %1, word gs
  3710                              <2>  o16 push %1
  3711                              <2>  %else
  3712 00000807 6801000000          <2>  push %1
  3713                              <2>  %endif
  3714                              <2> 
  3715                              <2>  %rotate -1
  3716                              <2> 
  3717                              <2> 
  3718                              <2> 
  3719                              <2> 
  3720                              <2> 
  3721                              <2> 
  3722                              <2> 
  3723                              <2>  %ifidni %1, cs
  3724                              <2>  o16 push %1
  3725                              <2>  %elifidni %1, ds
  3726                              <2>  o16 push %1
  3727                              <2>  %elifidni %1, es
  3728                              <2>  o16 push %1
  3729                              <2>  %elifidni %1, fs
  3730                              <2>  o16 push %1
  3731                              <2>  %elifidni %1, gs
  3732                              <2>  o16 push %1
  3733                              <2>  %elifidni %1, word cs
  3734                              <2>  o16 push %1
  3735                              <2>  %elifidni %1, word ds
  3736                              <2>  o16 push %1
  3737                              <2>  %elifidni %1, word es
  3738                              <2>  o16 push %1
  3739                              <2>  %elifidni %1, word fs
  3740                              <2>  o16 push %1
  3741                              <2>  %elifidni %1, word gs
  3742                              <2>  o16 push %1
  3743                              <2>  %else
  3744 0000080C 68[13000000]        <2>  push %1
  3745                              <2>  %endif
  3746                              <2> 
  3747                              <2>  %rotate -1
  3748                              <2> 
  3749                              <2> 
  3750                              <2> 
  3751                              <2> 
  3752                              <2> 
  3753                              <2> 
  3754                              <2> 
  3755                              <2>  %ifidni %1, cs
  3756                              <2>  o16 push %1
  3757                              <2>  %elifidni %1, ds
  3758 00000811 661E                <2>  o16 push %1
  3759                              <2>  %elifidni %1, es
  3760                              <2>  o16 push %1
  3761                              <2>  %elifidni %1, fs
  3762                              <2>  o16 push %1
  3763                              <2>  %elifidni %1, gs
  3764                              <2>  o16 push %1
  3765                              <2>  %elifidni %1, word cs
  3766                              <2>  o16 push %1
  3767                              <2>  %elifidni %1, word ds
  3768                              <2>  o16 push %1
  3769                              <2>  %elifidni %1, word es
  3770                              <2>  o16 push %1
  3771                              <2>  %elifidni %1, word fs
  3772                              <2>  o16 push %1
  3773                              <2>  %elifidni %1, word gs
  3774                              <2>  o16 push %1
  3775                              <2>  %else
  3776                              <2>  push %1
  3777                              <2>  %endif
  3778                              <2> 
  3779                              <2>  %rotate -1
  3780 00000813 E8(00000000)        <1> call %1
  3781                              <1> %if (%0!=1)
  3782 00000818 83C40A              <1>  add esp, byte %1_arglen
  3783                              <1> %endif
  3784                                          invoke  _LockArea, cs, dword _MouseCallback, dword _MouseCallback_end-_MouseCallback
  3785                              <1> %rotate -1
  3786                              <1> 
  3787                              <1> %rep (%0-1)
  3788                              <1> 
  3789                              <1> 
  3790                              <1> 
  3791                              <1> 
  3792                              <1> 
  3793                              <1> 
  3794                              <1> 
  3795                              <1>  %ifidni %1, cs
  3796                              <1>  o16 push %1
  3797                              <1>  %elifidni %1, ds
  3798                              <1>  o16 push %1
  3799                              <1>  %elifidni %1, es
  3800                              <1>  o16 push %1
  3801                              <1>  %elifidni %1, fs
  3802                              <1>  o16 push %1
  3803                              <1>  %elifidni %1, gs
  3804                              <1>  o16 push %1
  3805                              <1>  %elifidni %1, word cs
  3806                              <1>  o16 push %1
  3807                              <1>  %elifidni %1, word ds
  3808                              <1>  o16 push %1
  3809                              <1>  %elifidni %1, word es
  3810                              <1>  o16 push %1
  3811                              <1>  %elifidni %1, word fs
  3812                              <1>  o16 push %1
  3813                              <1>  %elifidni %1, word gs
  3814                              <1>  o16 push %1
  3815                              <1>  %else
  3816                              <1>  push %1
  3817                              <1>  %endif
  3818                              <1> 
  3819                              <1>  %rotate -1
  3820                              <1> %endrep
  3821                              <2> 
  3822                              <2> 
  3823                              <2> 
  3824                              <2> 
  3825                              <2> 
  3826                              <2> 
  3827                              <2> 
  3828                              <2>  %ifidni %1, cs
  3829                              <2>  o16 push %1
  3830                              <2>  %elifidni %1, ds
  3831                              <2>  o16 push %1
  3832                              <2>  %elifidni %1, es
  3833                              <2>  o16 push %1
  3834                              <2>  %elifidni %1, fs
  3835                              <2>  o16 push %1
  3836                              <2>  %elifidni %1, gs
  3837                              <2>  o16 push %1
  3838                              <2>  %elifidni %1, word cs
  3839                              <2>  o16 push %1
  3840                              <2>  %elifidni %1, word ds
  3841                              <2>  o16 push %1
  3842                              <2>  %elifidni %1, word es
  3843                              <2>  o16 push %1
  3844                              <2>  %elifidni %1, word fs
  3845                              <2>  o16 push %1
  3846                              <2>  %elifidni %1, word gs
  3847                              <2>  o16 push %1
  3848                              <2>  %else
  3849 0000081B 684A000000          <2>  push %1
  3850                              <2>  %endif
  3851                              <2> 
  3852                              <2>  %rotate -1
  3853                              <2> 
  3854                              <2> 
  3855                              <2> 
  3856                              <2> 
  3857                              <2> 
  3858                              <2> 
  3859                              <2> 
  3860                              <2>  %ifidni %1, cs
  3861                              <2>  o16 push %1
  3862                              <2>  %elifidni %1, ds
  3863                              <2>  o16 push %1
  3864                              <2>  %elifidni %1, es
  3865                              <2>  o16 push %1
  3866                              <2>  %elifidni %1, fs
  3867                              <2>  o16 push %1
  3868                              <2>  %elifidni %1, gs
  3869                              <2>  o16 push %1
  3870                              <2>  %elifidni %1, word cs
  3871                              <2>  o16 push %1
  3872                              <2>  %elifidni %1, word ds
  3873                              <2>  o16 push %1
  3874                              <2>  %elifidni %1, word es
  3875                              <2>  o16 push %1
  3876                              <2>  %elifidni %1, word fs
  3877                              <2>  o16 push %1
  3878                              <2>  %elifidni %1, word gs
  3879                              <2>  o16 push %1
  3880                              <2>  %else
  3881 00000820 68[C9080000]        <2>  push %1
  3882                              <2>  %endif
  3883                              <2> 
  3884                              <2>  %rotate -1
  3885                              <2> 
  3886                              <2> 
  3887                              <2> 
  3888                              <2> 
  3889                              <2> 
  3890                              <2> 
  3891                              <2> 
  3892                              <2>  %ifidni %1, cs
  3893 00000825 660E                <2>  o16 push %1
  3894                              <2>  %elifidni %1, ds
  3895                              <2>  o16 push %1
  3896                              <2>  %elifidni %1, es
  3897                              <2>  o16 push %1
  3898                              <2>  %elifidni %1, fs
  3899                              <2>  o16 push %1
  3900                              <2>  %elifidni %1, gs
  3901                              <2>  o16 push %1
  3902                              <2>  %elifidni %1, word cs
  3903                              <2>  o16 push %1
  3904                              <2>  %elifidni %1, word ds
  3905                              <2>  o16 push %1
  3906                              <2>  %elifidni %1, word es
  3907                              <2>  o16 push %1
  3908                              <2>  %elifidni %1, word fs
  3909                              <2>  o16 push %1
  3910                              <2>  %elifidni %1, word gs
  3911                              <2>  o16 push %1
  3912                              <2>  %else
  3913                              <2>  push %1
  3914                              <2>  %endif
  3915                              <2> 
  3916                              <2>  %rotate -1
  3917 00000827 E8(00000000)        <1> call %1
  3918                              <1> %if (%0!=1)
  3919 0000082C 83C40A              <1>  add esp, byte %1_arglen
  3920                              <1> %endif
  3921                                  
  3922                                          invoke  _Get_RMCB, dword _MouseSeg, dword _MouseOff, dword _MouseCallback, dword 1
  3923                              <1> %rotate -1
  3924                              <1> 
  3925                              <1> %rep (%0-1)
  3926                              <1> 
  3927                              <1> 
  3928                              <1> 
  3929                              <1> 
  3930                              <1> 
  3931                              <1> 
  3932                              <1> 
  3933                              <1>  %ifidni %1, cs
  3934                              <1>  o16 push %1
  3935                              <1>  %elifidni %1, ds
  3936                              <1>  o16 push %1
  3937                              <1>  %elifidni %1, es
  3938                              <1>  o16 push %1
  3939                              <1>  %elifidni %1, fs
  3940                              <1>  o16 push %1
  3941                              <1>  %elifidni %1, gs
  3942                              <1>  o16 push %1
  3943                              <1>  %elifidni %1, word cs
  3944                              <1>  o16 push %1
  3945                              <1>  %elifidni %1, word ds
  3946                              <1>  o16 push %1
  3947                              <1>  %elifidni %1, word es
  3948                              <1>  o16 push %1
  3949                              <1>  %elifidni %1, word fs
  3950                              <1>  o16 push %1
  3951                              <1>  %elifidni %1, word gs
  3952                              <1>  o16 push %1
  3953                              <1>  %else
  3954                              <1>  push %1
  3955                              <1>  %endif
  3956                              <1> 
  3957                              <1>  %rotate -1
  3958                              <1> %endrep
  3959                              <2> 
  3960                              <2> 
  3961                              <2> 
  3962                              <2> 
  3963                              <2> 
  3964                              <2> 
  3965                              <2> 
  3966                              <2>  %ifidni %1, cs
  3967                              <2>  o16 push %1
  3968                              <2>  %elifidni %1, ds
  3969                              <2>  o16 push %1
  3970                              <2>  %elifidni %1, es
  3971                              <2>  o16 push %1
  3972                              <2>  %elifidni %1, fs
  3973                              <2>  o16 push %1
  3974                              <2>  %elifidni %1, gs
  3975                              <2>  o16 push %1
  3976                              <2>  %elifidni %1, word cs
  3977                              <2>  o16 push %1
  3978                              <2>  %elifidni %1, word ds
  3979                              <2>  o16 push %1
  3980                              <2>  %elifidni %1, word es
  3981                              <2>  o16 push %1
  3982                              <2>  %elifidni %1, word fs
  3983                              <2>  o16 push %1
  3984                              <2>  %elifidni %1, word gs
  3985                              <2>  o16 push %1
  3986                              <2>  %else
  3987 0000082F 6801000000          <2>  push %1
  3988                              <2>  %endif
  3989                              <2> 
  3990                              <2>  %rotate -1
  3991                              <2> 
  3992                              <2> 
  3993                              <2> 
  3994                              <2> 
  3995                              <2> 
  3996                              <2> 
  3997                              <2> 
  3998                              <2>  %ifidni %1, cs
  3999                              <2>  o16 push %1
  4000                              <2>  %elifidni %1, ds
  4001                              <2>  o16 push %1
  4002                              <2>  %elifidni %1, es
  4003                              <2>  o16 push %1
  4004                              <2>  %elifidni %1, fs
  4005                              <2>  o16 push %1
  4006                              <2>  %elifidni %1, gs
  4007                              <2>  o16 push %1
  4008                              <2>  %elifidni %1, word cs
  4009                              <2>  o16 push %1
  4010                              <2>  %elifidni %1, word ds
  4011                              <2>  o16 push %1
  4012                              <2>  %elifidni %1, word es
  4013                              <2>  o16 push %1
  4014                              <2>  %elifidni %1, word fs
  4015                              <2>  o16 push %1
  4016                              <2>  %elifidni %1, word gs
  4017                              <2>  o16 push %1
  4018                              <2>  %else
  4019 00000834 68[C9080000]        <2>  push %1
  4020                              <2>  %endif
  4021                              <2> 
  4022                              <2>  %rotate -1
  4023                              <2> 
  4024                              <2> 
  4025                              <2> 
  4026                              <2> 
  4027                              <2> 
  4028                              <2> 
  4029                              <2> 
  4030                              <2>  %ifidni %1, cs
  4031                              <2>  o16 push %1
  4032                              <2>  %elifidni %1, ds
  4033                              <2>  o16 push %1
  4034                              <2>  %elifidni %1, es
  4035                              <2>  o16 push %1
  4036                              <2>  %elifidni %1, fs
  4037                              <2>  o16 push %1
  4038                              <2>  %elifidni %1, gs
  4039                              <2>  o16 push %1
  4040                              <2>  %elifidni %1, word cs
  4041                              <2>  o16 push %1
  4042                              <2>  %elifidni %1, word ds
  4043                              <2>  o16 push %1
  4044                              <2>  %elifidni %1, word es
  4045                              <2>  o16 push %1
  4046                              <2>  %elifidni %1, word fs
  4047                              <2>  o16 push %1
  4048                              <2>  %elifidni %1, word gs
  4049                              <2>  o16 push %1
  4050                              <2>  %else
  4051 00000839 68[10000000]        <2>  push %1
  4052                              <2>  %endif
  4053                              <2> 
  4054                              <2>  %rotate -1
  4055                              <2> 
  4056                              <2> 
  4057                              <2> 
  4058                              <2> 
  4059                              <2> 
  4060                              <2> 
  4061                              <2> 
  4062                              <2>  %ifidni %1, cs
  4063                              <2>  o16 push %1
  4064                              <2>  %elifidni %1, ds
  4065                              <2>  o16 push %1
  4066                              <2>  %elifidni %1, es
  4067                              <2>  o16 push %1
  4068                              <2>  %elifidni %1, fs
  4069                              <2>  o16 push %1
  4070                              <2>  %elifidni %1, gs
  4071                              <2>  o16 push %1
  4072                              <2>  %elifidni %1, word cs
  4073                              <2>  o16 push %1
  4074                              <2>  %elifidni %1, word ds
  4075                              <2>  o16 push %1
  4076                              <2>  %elifidni %1, word es
  4077                              <2>  o16 push %1
  4078                              <2>  %elifidni %1, word fs
  4079                              <2>  o16 push %1
  4080                              <2>  %elifidni %1, word gs
  4081                              <2>  o16 push %1
  4082                              <2>  %else
  4083 0000083E 68[0E000000]        <2>  push %1
  4084                              <2>  %endif
  4085                              <2> 
  4086                              <2>  %rotate -1
  4087 00000843 E8(00000000)        <1> call %1
  4088                              <1> %if (%0!=1)
  4089 00000848 83C410              <1>  add esp, byte %1_arglen
  4090                              <1> %endif
  4091 0000084B 85C0                           	test	eax, eax
  4092 0000084D 753A                    	jnz	.MouseDone
  4093                                  
  4094 0000084F C705[00000000]0C00-             mov     dword [DPMI_EAX], 0Ch
  4095 00000857 0000               
  4096 00000859 C705[00000000]0A00-             mov     dword [DPMI_ECX], 0Ah
  4097 00000861 0000               
  4098 00000863 31D2                            xor     edx, edx
  4099 00000865 668B15[10000000]                mov     dx, [_MouseOff]
  4100 0000086C 8915[00000000]                  mov     [DPMI_EDX], edx
  4101 00000872 66A1[0E000000]                  mov     ax, [_MouseSeg]
  4102 00000878 66A3[00000000]                  mov     [DPMI_ES], ax
  4103 0000087E 66BB3300                        mov     bx, 33h
  4104 00000882 E8(00000000)                    call    DPMI_Int
  4105 00000887 31C0                            xor     eax, eax
  4106                                  
  4107                                  .MouseDone
  4108                                          ret			    
  4109                              <1> %ifnctx proc
  4110 00000889 C3                  <1>  ret %1
  4111                              <1> %else
  4112                              <1>  mov esp, ebp
  4113                              <1>  pop ebp
  4114                              <1>  ret %1
  4115                              <1> %endif
  4116                                  
  4117                                  ;--------------------------------------------------------------
  4118                                  ;--                        RemoveMouse()                     --
  4119                                  ;--------------------------------------------------------------
  4120                                  _RemoveMouse
  4121                                  
  4122                                  ;	call	_libRemoveMouse
  4123                                  
  4124 0000088A C705[00000000]0C00-             mov     dword [DPMI_EAX], 0Ch
  4125 00000892 0000               
  4126 00000894 31D2                            xor     edx, edx
  4127 00000896 8915[00000000]                  mov     [DPMI_ECX], edx
  4128 0000089C 8915[00000000]                  mov     [DPMI_EDX], edx
  4129 000008A2 668915[00000000]                mov     [DPMI_ES], dx
  4130 000008A9 66BB3300                        mov     bx, 33h
  4131 000008AD E8(00000000)                    call    DPMI_Int
  4132                                          invoke  _Free_RMCB, word [_MouseSeg], word [_MouseOff]
  4133                              <1> %rotate -1
  4134                              <1> 
  4135                              <1> %rep (%0-1)
  4136                              <1> 
  4137                              <1> 
  4138                              <1> 
  4139                              <1> 
  4140                              <1> 
  4141                              <1> 
  4142                              <1> 
  4143                              <1>  %ifidni %1, cs
  4144                              <1>  o16 push %1
  4145                              <1>  %elifidni %1, ds
  4146                              <1>  o16 push %1
  4147                              <1>  %elifidni %1, es
  4148                              <1>  o16 push %1
  4149                              <1>  %elifidni %1, fs
  4150                              <1>  o16 push %1
  4151                              <1>  %elifidni %1, gs
  4152                              <1>  o16 push %1
  4153                              <1>  %elifidni %1, word cs
  4154                              <1>  o16 push %1
  4155                              <1>  %elifidni %1, word ds
  4156                              <1>  o16 push %1
  4157                              <1>  %elifidni %1, word es
  4158                              <1>  o16 push %1
  4159                              <1>  %elifidni %1, word fs
  4160                              <1>  o16 push %1
  4161                              <1>  %elifidni %1, word gs
  4162                              <1>  o16 push %1
  4163                              <1>  %else
  4164                              <1>  push %1
  4165                              <1>  %endif
  4166                              <1> 
  4167                              <1>  %rotate -1
  4168                              <1> %endrep
  4169                              <2> 
  4170                              <2> 
  4171                              <2> 
  4172                              <2> 
  4173                              <2> 
  4174                              <2> 
  4175                              <2> 
  4176                              <2>  %ifidni %1, cs
  4177                              <2>  o16 push %1
  4178                              <2>  %elifidni %1, ds
  4179                              <2>  o16 push %1
  4180                              <2>  %elifidni %1, es
  4181                              <2>  o16 push %1
  4182                              <2>  %elifidni %1, fs
  4183                              <2>  o16 push %1
  4184                              <2>  %elifidni %1, gs
  4185                              <2>  o16 push %1
  4186                              <2>  %elifidni %1, word cs
  4187                              <2>  o16 push %1
  4188                              <2>  %elifidni %1, word ds
  4189                              <2>  o16 push %1
  4190                              <2>  %elifidni %1, word es
  4191                              <2>  o16 push %1
  4192                              <2>  %elifidni %1, word fs
  4193                              <2>  o16 push %1
  4194                              <2>  %elifidni %1, word gs
  4195                              <2>  o16 push %1
  4196                              <2>  %else
  4197 000008B2 66FF35[10000000]    <2>  push %1
  4198                              <2>  %endif
  4199                              <2> 
  4200                              <2>  %rotate -1
  4201                              <2> 
  4202                              <2> 
  4203                              <2> 
  4204                              <2> 
  4205                              <2> 
  4206                              <2> 
  4207                              <2> 
  4208                              <2>  %ifidni %1, cs
  4209                              <2>  o16 push %1
  4210                              <2>  %elifidni %1, ds
  4211                              <2>  o16 push %1
  4212                              <2>  %elifidni %1, es
  4213                              <2>  o16 push %1
  4214                              <2>  %elifidni %1, fs
  4215                              <2>  o16 push %1
  4216                              <2>  %elifidni %1, gs
  4217                              <2>  o16 push %1
  4218                              <2>  %elifidni %1, word cs
  4219                              <2>  o16 push %1
  4220                              <2>  %elifidni %1, word ds
  4221                              <2>  o16 push %1
  4222                              <2>  %elifidni %1, word es
  4223                              <2>  o16 push %1
  4224                              <2>  %elifidni %1, word fs
  4225                              <2>  o16 push %1
  4226                              <2>  %elifidni %1, word gs
  4227                              <2>  o16 push %1
  4228                              <2>  %else
  4229 000008B9 66FF35[0E000000]    <2>  push %1
  4230                              <2>  %endif
  4231                              <2> 
  4232                              <2>  %rotate -1
  4233 000008C0 E8(00000000)        <1> call %1
  4234                              <1> %if (%0!=1)
  4235 000008C5 83C404              <1>  add esp, byte %1_arglen
  4236                              <1> %endif
  4237                                          ret
  4238                              <1> %ifnctx proc
  4239 000008C8 C3                  <1>  ret %1
  4240                              <1> %else
  4241                              <1>  mov esp, ebp
  4242                              <1>  pop ebp
  4243                              <1>  ret %1
  4244                              <1> %endif
  4245                                  
  4246                                  ;--------------------------------------------------------------
  4247                                  ;--                        MouseCallback()                   --
  4248                                  ;--------------------------------------------------------------
  4249                                  proc _MouseCallback
  4250                              <1> %ifctx proc
  4251                              <1> %error Mismatched `endproc'/`proc'
  4252                              <1> %else
  4253                              <1> %push proc
  4254                              <1>  global %1
  4255 000008C9 55                  <1> %1: push ebp
  4256 000008CA 89E5                <1>  mov ebp, esp
  4257                              <1> %assign %$arg 8
  4258                              <1> %assign %$local 0
  4259                              <1> 
  4260                              <1> %define %$procname %1
  4261                              <1> %endif
  4262                                  .DPMIRegsPtr   arg     4
  4263                              <1> .DPMIRegsPtr equ %$arg
  4264                              <1> 
  4265                              <1> 
  4266                              <1> %assign %$arg %1+%$arg
  4267                                  
  4268                                  ; local constants.  hope these are in "ax" ;)
  4269                                  ; ---yep they are
  4270                                  .LEFT_PRESS_BIT		equ 2
  4271                                  .RIGHT_PRESS_BIT	equ 8
  4272                                  .PRESS_BITS		equ .LEFT_PRESS_BIT | .RIGHT_PRESS_BIT
  4273                                  
  4274                                  	;invoke	_libMouseCallback, dword [ebp+.DPMIRegsPtr]
  4275                                  
  4276 000008CC F605[13000000]06        	test	byte [_MPFlags], ZOOM_BITS
  4277 000008D3 753A                    	jnz	.ignore
  4278                                  
  4279 000008D5 8B5D08                  	mov	ebx, [ebp+.DPMIRegsPtr]
  4280 000008D8 26F6431C0A              	test	byte [es:ebx+DPMI_EAX_off], .PRESS_BITS
  4281 000008DD 7430                    	jz	.ignore
  4282                                  
  4283 000008DF 26F6431C02              	test	byte [es:ebx+DPMI_EAX_off], .LEFT_PRESS_BIT
  4284 000008E4 740C                    	jz	.notleft
  4285 000008E6 800D[13000000]04        	or	byte [_MPFlags], ZOOM_OUT_BIT
  4286 000008ED E907000000              	jmp	.notright
  4287                                  
  4288                                  .notleft
  4289                                  	;test	byte [es:ebx+DPMI_EAX_off], .RIGHT_PRESS_BIT
  4290                                  	;jnz	.notright
  4291 000008F2 800D[13000000]02        	or	byte [_MPFlags], ZOOM_IN_BIT
  4292                                  
  4293                                  .notright
  4294 000008F9 26668B4318              	mov	ax, [es:ebx+DPMI_ECX_off]
  4295 000008FE 66A3[24000000]          	mov	[_MouseX], ax
  4296 00000904 26668B4314              	mov	ax, [es:ebx+DPMI_EDX_off]
  4297 00000909 66A3[26000000]          	mov	[_MouseY], ax
  4298                                  
  4299                                  
  4300                                  .ignore
  4301                                  	ret
  4302                              <1> %ifnctx proc
  4303                              <1>  ret %1
  4304                              <1> %else
  4305 0000090F 89EC                <1>  mov esp, ebp
  4306 00000911 5D                  <1>  pop ebp
  4307 00000912 C3                  <1>  ret %1
  4308                              <1> %endif
  4309                                  
  4310                                  endproc
  4311                              <1> %ifnctx proc
  4312                              <1> %error Mismatched `endproc'/`proc'
  4313                              <1> %else
  4314                              <1> .STACK_FRAME_SIZE equ %$local
  4315                              <1> 
  4316                              <1> 
  4317                              <1> %ifdef LEGACY_ENDPROC
  4318                              <1>  ret
  4319                              <1> %endif
  4320                              <1> 
  4321                              <1> 
  4322                              <1> 
  4323                              <1> 
  4324                              <1> 
  4325                              <1> 
  4326                              <1> 
  4327                              <1> 
  4328                              <1> 
  4329                              <1> %pop
  4330                              <1> %endif
  4331                                  _MouseCallback_end
  4332                                  _MouseCallback_arglen	EQU	4
  4333                                  
